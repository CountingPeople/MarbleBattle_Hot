// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: emulator.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Net.Proto {

  /// <summary>Holder for reflection information generated from emulator.proto</summary>
  public static partial class EmulatorReflection {

    #region Descriptor
    /// <summary>File descriptor for emulator.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static EmulatorReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg5lbXVsYXRvci5wcm90bxILY29tLmdhbWUucGIiIAoDUGtnEgsKA2NtZBgB",
            "IAEoBRIMCgRib2R5GAIgASgMIkEKCEVycm9yX1NDEg8KBm1zZ19pZBiUAyAB",
            "KAUSJAoEY29kZRgBIAEoDjIWLmNvbS5nYW1lLnBiLkVycm9yQ29kZSItCghM",
            "b2dpbl9DUxIQCgZtc2dfaWQYgfEEIAEoBRIPCgdhY2NvdW50GAEgASgJIh0K",
            "CUxvZ291dF9DUxIQCgZtc2dfaWQYgvEEIAEoBSJECgtQbGF5SW5mb19TQxIQ",
            "CgZtc2dfaWQYg/EEIAEoBRIjCgRpbmZvGAEgASgLMhUuY29tLmdhbWUucGIu",
            "UGxheUluZm8iKQoIUGxheUluZm8SDwoHYWNjb3VudBgBIAEoCRIMCgRuYW1l",
            "GAIgASgJIjEKDUNyZWF0ZVJvb21fQ1MSEAoGbXNnX2lkGOj4BCABKAUSDgoG",
            "bWFwX2lkGAEgASgFIjAKC0pvaW5Sb29tX0NTEhAKBm1zZ19pZBjp+AQgASgF",
            "Eg8KB3Jvb21faWQYASABKAUiHgoKUmVhZHlHb19DUxIQCgZtc2dfaWQY6vgE",
            "IAEoBSJECgtSb29tSW5mb19TQxIQCgZtc2dfaWQY6/gEIAEoBRIjCgRyb29t",
            "GAEgASgLMhUuY29tLmdhbWUucGIuUm9vbUluZm8iXwoUSnVtcFRvQmF0dGxl",
            "RmllbGRfU0MSEAoGbXNnX2lkGOz4BCABKAUSNQoPYmF0dGxlRmllbGRJbmZv",
            "GAEgASgLMhwuY29tLmdhbWUucGIuQmF0dGxlRmllbGRJbmZvIh8KC0V4aXRS",
            "b29tX0NTEhAKBm1zZ19pZBjt+AQgASgFIiAKDENsb3NlUm9vbV9DUxIQCgZt",
            "c2dfaWQY7vgEIAEoBSJHCgtTZXRGbGVldF9DUxIQCgZtc2dfaWQY7/gEIAEo",
            "BRImCgVzaGlwcxgBIAMoCzIXLmNvbS5nYW1lLnBiLkJhdHRsZVNoaXAiggEK",
            "CFJvb21JbmZvEg8KB3Jvb21faWQYASABKAUSDgoGbWFwX2lkGAIgASgFEg0K",
            "BW93bmVyGAMgASgJEg8KB21heF9udW0YBCABKAUSCwoDbnVtGAUgASgFEigK",
            "B3BsYXllcnMYBiADKAsyFy5jb20uZ2FtZS5wYi5Sb29tUGxheWVyIi4KClJv",
            "b21QbGF5ZXISDwoHYWNjb3VudBgBIAEoCRIPCgdpc1JlYWR5GAIgASgIIksK",
            "D0JhdHRsZUZpZWxkSW5mbxIOCgZtYXBfaWQYASABKAUSKAoGZmxlZXRzGAIg",
            "AygLMhguY29tLmdhbWUucGIuQmF0dGxlRmxlZXQiSgoLQmF0dGxlRmxlZXQS",
            "DwoHYWNjb3VudBgBIAEoCRIqCglzaGlwX2xpc3QYAiADKAsyFy5jb20uZ2Ft",
            "ZS5wYi5CYXR0bGVTaGlwIrEBCgpCYXR0bGVTaGlwEgwKBGd1aWQYASABKAkS",
            "CgoCaWQYAiABKAUSJwoIcG9zaXRpb24YAyABKAsyFS5jb20uZ2FtZS5wYi5Q",
            "b3NpdGlvbhIOCgZtYXhfaHAYBCABKAUSCgoCaHAYBSABKAUSIAoFYXR0cnMY",
            "BiADKAsyES5jb20uZ2FtZS5wYi5BdHRyEiIKBnNraWxscxgHIAMoCzISLmNv",
            "bS5nYW1lLnBiLlNraWxsIiAKCFBvc2l0aW9uEgkKAXgYASABKAUSCQoBeRgC",
            "IAEoBSI8CgRBdHRyEiUKBWluZGV4GAEgASgOMhYuY29tLmdhbWUucGIuQXR0",
            "ckluZGV4Eg0KBXZhbHVlGAIgASgFIkYKBEJ1ZmYSEQoJc2hpcF9ndWlkGAEg",
            "ASgJEgwKBGd1aWQYAiABKAkSCgoCaWQYAyABKAUSEQoJcm91bmRfbnVtGAQg",
            "ASgFIjwKBVNraWxsEgwKBGd1aWQYASABKAkSCgoCaWQYAiABKAUSDQoFbGV2",
            "ZWwYAyABKAUSCgoCY2QYBCABKAUiTgoJU2hpcFVwX0NTEhAKBm1zZ19pZBjX",
            "+QQgASgFEgwKBGd1aWQYASABKAkSIQoCdG8YAiABKAsyFS5jb20uZ2FtZS5w",
            "Yi5Qb3NpdGlvbiJOCglTaGlwVXBfU0MSEAoGbXNnX2lkGNj5BCABKAUSDAoE",
            "Z3VpZBgBIAEoCRIhCgJ0bxgCIAEoCzIVLmNvbS5nYW1lLnBiLlBvc2l0aW9u",
            "IlIKC1NoaXBEb3duX0NTEhAKBm1zZ19pZBjZ+QQgASgFEgwKBGd1aWQYASAB",
            "KAkSIwoEZnJvbRgCIAEoCzIVLmNvbS5nYW1lLnBiLlBvc2l0aW9uIlIKC1No",
            "aXBEb3duX1NDEhAKBm1zZ19pZBja+QQgASgFEgwKBGd1aWQYASABKAkSIwoE",
            "ZnJvbRgCIAEoCzIVLmNvbS5nYW1lLnBiLlBvc2l0aW9uIiEKDVByZXBhcmVF",
            "bmRfQ1MSEAoGbXNnX2lkGNGABSABKAUiUQoOUHJlcGFyZUluZm9fU0MSEAoG",
            "bXNnX2lkGNKABSABKAUSLQoLcHJlcGFyZUluZm8YASADKAsyGC5jb20uZ2Ft",
            "ZS5wYi5QcmVwYXJlSW5mbyIqCgtQcmVwYXJlSW5mbxIPCgdhY2NvdW50GAEg",
            "ASgJEgoKAm9rGAIgASgIIlAKC1NoaXBNb3ZlX0NTEhAKBm1zZ19pZBjTgAUg",
            "ASgFEgwKBGd1aWQYASABKAkSIQoCdG8YAiABKAsyFS5jb20uZ2FtZS5wYi5Q",
            "b3NpdGlvbiJQCgtTaGlwTW92ZV9TQxIQCgZtc2dfaWQY1IAFIAEoBRIMCgRn",
            "dWlkGAEgASgJEiEKAnRvGAIgASgLMhUuY29tLmdhbWUucGIuUG9zaXRpb24i",
            "IgoOQmF0dGxlU3RhcnRfU0MSEAoGbXNnX2lkGNWABSABKAUiTQoPTm9ybWFs",
            "QXR0YWNrX0NTEhAKBm1zZ19pZBjWgAUgASgFEhMKC2F0dGFja19ndWlkGAEg",
            "ASgJEhMKC3RhcmdldF9ndWlkGAIgASgJImAKDlNraWxsQXR0YWNrX0NTEhAK",
            "Bm1zZ19pZBjXgAUgASgFEhMKC2F0dGFja19ndWlkGAEgASgJEhMKC3Rhcmdl",
            "dF9ndWlkGAIgASgJEhIKCnNraWxsX2d1aWQYAyABKAkiTAoOU2tpbGxSZXN1",
            "bHRfU0MSEAoGbXNnX2lkGNiABSABKAUSKAoGcmVzdWx0GAEgASgLMhguY29t",
            "LmdhbWUucGIuU2tpbGxSZXN1bHQinQIKC1NraWxsUmVzdWx0EhMKC2F0dGFj",
            "a19ndWlkGAEgASgJEhMKC3RhcmdldF9ndWlkGAIgASgJEhIKCnNraWxsX2d1",
            "aWQYAyABKAkSMQoPc2tpbGxEYW1hZ2VMaXN0GAQgAygLMhguY29tLmdhbWUu",
            "cGIuU2tpbGxEYW1hZ2USLQoNc2tpbGxIZWFsTGlzdBgFIAMoCzIWLmNvbS5n",
            "YW1lLnBiLlNraWxsSGVhbBIzChBza2lsbEFkZEJ1ZmZMaXN0GAYgAygLMhku",
            "Y29tLmdhbWUucGIuU2tpbGxBZGRCdWZmEjkKE3NraWxsUmVtb3ZlQnVmZkxp",
            "c3QYByADKAsyHC5jb20uZ2FtZS5wYi5Ta2lsbFJlbW92ZUJ1ZmYiMgoLU2tp",
            "bGxEYW1hZ2USEwoLdGFyZ2V0X2d1aWQYASABKAkSDgoGZGFtYWdlGAIgASgF",
            "Ii4KCVNraWxsSGVhbBITCgt0YXJnZXRfZ3VpZBgBIAEoCRIMCgRoZWFsGAMg",
            "ASgFIi8KDFNraWxsQWRkQnVmZhIfCgRidWZmGAEgASgLMhEuY29tLmdhbWUu",
            "cGIuQnVmZiIyCg9Ta2lsbFJlbW92ZUJ1ZmYSHwoEYnVmZhgBIAEoCzIRLmNv",
            "bS5nYW1lLnBiLkJ1ZmYiKwoIUm91bmRfU0MSEAoGbXNnX2lkGNmABSABKAUS",
            "DQoFcm91bmQYASABKAUiMwoOQWN0aW9uU3RhcnRfU0MSEAoGbXNnX2lkGNqA",
            "BSABKAUSDwoHYWNjb3VudBgBIAEoCSIwCg5TaGlwU3RhbmRieV9DUxIQCgZt",
            "c2dfaWQY24AFIAEoBRIMCgRndWlkGAEgASgJIjQKDlNoaXBTdGFuZGJ5X1ND",
            "EhAKBm1zZ19pZBjcgAUgASgFEhAKCHNoaXBMaXN0GAIgAygJIiAKDEFjdGlv",
            "bkVuZF9DUxIQCgZtc2dfaWQY3YAFIAEoBSJjChVOb3JtYWxBdHRhY2tSZXN1",
            "bHRfU0MSEAoGbXNnX2lkGN6ABSABKAUSEwoLYXR0YWNrX2d1aWQYASABKAkS",
            "EwoLdGFyZ2V0X2d1aWQYAiABKAkSDgoGZGFtYWdlGAMgASgFIkkKDVNoaXBT",
            "dGF0dXNfU0MSEAoGbXNnX2lkGN+ABSABKAUSJgoFc2hpcHMYASADKAsyFy5j",
            "b20uZ2FtZS5wYi5TaGlwU3RhdHVzIjwKClNoaXBTdGF0dXMSDAoEZ3VpZBgB",
            "IAEoCRIgCgVhdHRycxgGIAMoCzIRLmNvbS5nYW1lLnBiLkF0dHIiIgoOQUlB",
            "dXRvbWF0aWNfQ1MSEAoGbXNnX2lkGOCABSABKAUiMQoLU2hpcERlYWRfU0MS",
            "EAoGbXNnX2lkGOGABSABKAUSEAoIc2hpcExpc3QYAiADKAkiOQoNQmF0dGxl",
            "T3Zlcl9TQxIQCgZtc2dfaWQY4oAFIAEoBRIWCg53aW5uZXJfYWNjb3VudBgB",
            "IAEoCSJCCg1CdWZmVXBkYXRlX1NDEhAKBm1zZ19pZBjjgAUgASgFEh8KBGJ1",
            "ZmYYASADKAsyES5jb20uZ2FtZS5wYi5CdWZmIjQKDUJ1ZmZSZW1vdmVfU0MS",
            "EAoGbXNnX2lkGOSABSABKAUSEQoJYnVmZl9ndWlkGAEgAygJIj8KCkJ1ZmZB",
            "ZGRfU0MSEAoGbXNnX2lkGOWABSABKAUSHwoEYnVmZhgBIAMoCzIRLmNvbS5n",
            "YW1lLnBiLkJ1ZmYiPwoIU2tpbGxfU0MSEAoGbXNnX2lkGOaABSABKAUSIQoF",
            "c2tpbGwYASABKAsyEi5jb20uZ2FtZS5wYi5Ta2lsbCJaCgxGaWdodEJhY2tf",
            "U0MSEAoGbXNnX2lkGOeABSABKAUSEwoLYXR0YWNrX2d1aWQYASABKAkSEwoL",
            "dGFyZ2V0X2d1aWQYAiABKAkSDgoGZGFtYWdlGAMgASgFIscBCgxTaGlwU3Rh",
            "dGVfU0MSEAoGbXNnX2lkGOiABSABKAUSEQoJc2hpcF9ndWlkGAEgASgJEi4K",
            "BXN0YXRlGAIgASgOMh8uY29tLmdhbWUucGIuU2hpcFN0YXRlX1NDLlN0YXRl",
            "ImIKBVN0YXRlEgYKAk9LEAASCwoHTk9fTU9WRRABEhQKEE5PX05PUk1BTF9B",
            "VFRBQ0sQAhITCg9OT19TS0lMTF9BVFRBQ0sQAxINCglOT19BVFRBQ0sQBBIK",
            "CgZOT19BTEwQBSrUAgoJRXJyb3JDb2RlEgYKAk9LEAASEgoOTk9UX1JPT01f",
            "T1dORVIQARISCg5ST09NX05PVF9FWElTVBACEhMKD0FMUkVBRFlfSU5fUk9P",
            "TRADEg0KCU5PVF9SRUFEWRAEEhsKF1NISVBfTk9UX09OX0JBVFRMRUZJRUxE",
            "EAUSEwoPTU9WRV9TSElQX0VSUk9SEAYSEQoNTk9UX1lPVVJfVFVSThAHEgwK",
            "CE5PX1NLSUxMEAgSFgoSU0tJTExfVEFSR0VUX0VSUk9SEAkSFgoSU0tJTExf",
            "Tk9UX0lOX1JBTkdFEAoSDwoLU0tJTExfSU5fQ0QQCxIVChFBQ0NPVU5UX0lT",
            "X09OTElORRAMEg0KCU5PX0FUVEFDSxANEgsKB05PX01PVkUQDhIYChRTSElQ",
            "X0FMUkVBRFlfU1RBTkRCWRAPEhIKDkZMRUVUX0lTX0VNUFRZEBAqbgoJQXR0",
            "ckluZGV4EgkKBWh1b2xpEAASCgoGbmFpaml1EAESCQoFcG9qaWEQAhIJCgVo",
            "dWppYRADEg0KCW1pbmd6aG9uZxAEEgoKBnNoYW5iaRAFEgwKCHNoZWNoZW5n",
            "EAYSCwoHeWljaGVuZxAHQhkKC2NvbS5nYW1lLnBiqgIJTmV0LlByb3RvYgZw",
            "cm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Net.Proto.ErrorCode), typeof(global::Net.Proto.AttrIndex), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.Proto.Pkg), global::Net.Proto.Pkg.Parser, new[]{ "Cmd", "Body" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.Proto.Error_SC), global::Net.Proto.Error_SC.Parser, new[]{ "MsgId", "Code" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.Proto.Login_CS), global::Net.Proto.Login_CS.Parser, new[]{ "MsgId", "Account" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.Proto.Logout_CS), global::Net.Proto.Logout_CS.Parser, new[]{ "MsgId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.Proto.PlayInfo_SC), global::Net.Proto.PlayInfo_SC.Parser, new[]{ "MsgId", "Info" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.Proto.PlayInfo), global::Net.Proto.PlayInfo.Parser, new[]{ "Account", "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.Proto.CreateRoom_CS), global::Net.Proto.CreateRoom_CS.Parser, new[]{ "MsgId", "MapId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.Proto.JoinRoom_CS), global::Net.Proto.JoinRoom_CS.Parser, new[]{ "MsgId", "RoomId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.Proto.ReadyGo_CS), global::Net.Proto.ReadyGo_CS.Parser, new[]{ "MsgId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.Proto.RoomInfo_SC), global::Net.Proto.RoomInfo_SC.Parser, new[]{ "MsgId", "Room" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.Proto.JumpToBattleField_SC), global::Net.Proto.JumpToBattleField_SC.Parser, new[]{ "MsgId", "BattleFieldInfo" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.Proto.ExitRoom_CS), global::Net.Proto.ExitRoom_CS.Parser, new[]{ "MsgId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.Proto.CloseRoom_CS), global::Net.Proto.CloseRoom_CS.Parser, new[]{ "MsgId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.Proto.SetFleet_CS), global::Net.Proto.SetFleet_CS.Parser, new[]{ "MsgId", "Ships" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.Proto.RoomInfo), global::Net.Proto.RoomInfo.Parser, new[]{ "RoomId", "MapId", "Owner", "MaxNum", "Num", "Players" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.Proto.RoomPlayer), global::Net.Proto.RoomPlayer.Parser, new[]{ "Account", "IsReady" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.Proto.BattleFieldInfo), global::Net.Proto.BattleFieldInfo.Parser, new[]{ "MapId", "Fleets" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.Proto.BattleFleet), global::Net.Proto.BattleFleet.Parser, new[]{ "Account", "ShipList" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.Proto.BattleShip), global::Net.Proto.BattleShip.Parser, new[]{ "Guid", "Id", "Position", "MaxHp", "Hp", "Attrs", "Skills" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.Proto.Position), global::Net.Proto.Position.Parser, new[]{ "X", "Y" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.Proto.Attr), global::Net.Proto.Attr.Parser, new[]{ "Index", "Value" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.Proto.Buff), global::Net.Proto.Buff.Parser, new[]{ "ShipGuid", "Guid", "Id", "RoundNum" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.Proto.Skill), global::Net.Proto.Skill.Parser, new[]{ "Guid", "Id", "Level", "Cd" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.Proto.ShipUp_CS), global::Net.Proto.ShipUp_CS.Parser, new[]{ "MsgId", "Guid", "To" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.Proto.ShipUp_SC), global::Net.Proto.ShipUp_SC.Parser, new[]{ "MsgId", "Guid", "To" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.Proto.ShipDown_CS), global::Net.Proto.ShipDown_CS.Parser, new[]{ "MsgId", "Guid", "From" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.Proto.ShipDown_SC), global::Net.Proto.ShipDown_SC.Parser, new[]{ "MsgId", "Guid", "From" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.Proto.PrepareEnd_CS), global::Net.Proto.PrepareEnd_CS.Parser, new[]{ "MsgId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.Proto.PrepareInfo_SC), global::Net.Proto.PrepareInfo_SC.Parser, new[]{ "MsgId", "PrepareInfo" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.Proto.PrepareInfo), global::Net.Proto.PrepareInfo.Parser, new[]{ "Account", "Ok" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.Proto.ShipMove_CS), global::Net.Proto.ShipMove_CS.Parser, new[]{ "MsgId", "Guid", "To" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.Proto.ShipMove_SC), global::Net.Proto.ShipMove_SC.Parser, new[]{ "MsgId", "Guid", "To" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.Proto.BattleStart_SC), global::Net.Proto.BattleStart_SC.Parser, new[]{ "MsgId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.Proto.NormalAttack_CS), global::Net.Proto.NormalAttack_CS.Parser, new[]{ "MsgId", "AttackGuid", "TargetGuid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.Proto.SkillAttack_CS), global::Net.Proto.SkillAttack_CS.Parser, new[]{ "MsgId", "AttackGuid", "TargetGuid", "SkillGuid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.Proto.SkillResult_SC), global::Net.Proto.SkillResult_SC.Parser, new[]{ "MsgId", "Result" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.Proto.SkillResult), global::Net.Proto.SkillResult.Parser, new[]{ "AttackGuid", "TargetGuid", "SkillGuid", "SkillDamageList", "SkillHealList", "SkillAddBuffList", "SkillRemoveBuffList" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.Proto.SkillDamage), global::Net.Proto.SkillDamage.Parser, new[]{ "TargetGuid", "Damage" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.Proto.SkillHeal), global::Net.Proto.SkillHeal.Parser, new[]{ "TargetGuid", "Heal" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.Proto.SkillAddBuff), global::Net.Proto.SkillAddBuff.Parser, new[]{ "Buff" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.Proto.SkillRemoveBuff), global::Net.Proto.SkillRemoveBuff.Parser, new[]{ "Buff" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.Proto.Round_SC), global::Net.Proto.Round_SC.Parser, new[]{ "MsgId", "Round" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.Proto.ActionStart_SC), global::Net.Proto.ActionStart_SC.Parser, new[]{ "MsgId", "Account" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.Proto.ShipStandby_CS), global::Net.Proto.ShipStandby_CS.Parser, new[]{ "MsgId", "Guid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.Proto.ShipStandby_SC), global::Net.Proto.ShipStandby_SC.Parser, new[]{ "MsgId", "ShipList" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.Proto.ActionEnd_CS), global::Net.Proto.ActionEnd_CS.Parser, new[]{ "MsgId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.Proto.NormalAttackResult_SC), global::Net.Proto.NormalAttackResult_SC.Parser, new[]{ "MsgId", "AttackGuid", "TargetGuid", "Damage" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.Proto.ShipStatus_SC), global::Net.Proto.ShipStatus_SC.Parser, new[]{ "MsgId", "Ships" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.Proto.ShipStatus), global::Net.Proto.ShipStatus.Parser, new[]{ "Guid", "Attrs" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.Proto.AIAutomatic_CS), global::Net.Proto.AIAutomatic_CS.Parser, new[]{ "MsgId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.Proto.ShipDead_SC), global::Net.Proto.ShipDead_SC.Parser, new[]{ "MsgId", "ShipList" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.Proto.BattleOver_SC), global::Net.Proto.BattleOver_SC.Parser, new[]{ "MsgId", "WinnerAccount" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.Proto.BuffUpdate_SC), global::Net.Proto.BuffUpdate_SC.Parser, new[]{ "MsgId", "Buff" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.Proto.BuffRemove_SC), global::Net.Proto.BuffRemove_SC.Parser, new[]{ "MsgId", "BuffGuid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.Proto.BuffAdd_SC), global::Net.Proto.BuffAdd_SC.Parser, new[]{ "MsgId", "Buff" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.Proto.Skill_SC), global::Net.Proto.Skill_SC.Parser, new[]{ "MsgId", "Skill" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.Proto.FightBack_SC), global::Net.Proto.FightBack_SC.Parser, new[]{ "MsgId", "AttackGuid", "TargetGuid", "Damage" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Net.Proto.ShipState_SC), global::Net.Proto.ShipState_SC.Parser, new[]{ "MsgId", "ShipGuid", "State" }, null, new[]{ typeof(global::Net.Proto.ShipState_SC.Types.State) }, null)
          }));
    }
    #endregion

  }
  #region Enums
  /// <summary>
  ///错误码
  /// </summary>
  public enum ErrorCode {
    /// <summary>
    ///正常
    /// </summary>
    [pbr::OriginalName("OK")] Ok = 0,
    /// <summary>
    ///非房主
    /// </summary>
    [pbr::OriginalName("NOT_ROOM_OWNER")] NotRoomOwner = 1,
    /// <summary>
    ///房间不存在
    /// </summary>
    [pbr::OriginalName("ROOM_NOT_EXIST")] RoomNotExist = 2,
    /// <summary>
    ///已在房间中
    /// </summary>
    [pbr::OriginalName("ALREADY_IN_ROOM")] AlreadyInRoom = 3,
    /// <summary>
    ///没有准备好
    /// </summary>
    [pbr::OriginalName("NOT_READY")] NotReady = 4,
    /// <summary>
    ///船只未上阵
    /// </summary>
    [pbr::OriginalName("SHIP_NOT_ON_BATTLEFIELD")] ShipNotOnBattlefield = 5,
    /// <summary>
    ///移动了错误的船只
    /// </summary>
    [pbr::OriginalName("MOVE_SHIP_ERROR")] MoveShipError = 6,
    /// <summary>
    ///没轮到你操作
    /// </summary>
    [pbr::OriginalName("NOT_YOUR_TURN")] NotYourTurn = 7,
    /// <summary>
    ///沉默状态,无法释放技能
    /// </summary>
    [pbr::OriginalName("NO_SKILL")] NoSkill = 8,
    /// <summary>
    ///技能目标错误
    /// </summary>
    [pbr::OriginalName("SKILL_TARGET_ERROR")] SkillTargetError = 9,
    /// <summary>
    ///技能范围不够
    /// </summary>
    [pbr::OriginalName("SKILL_NOT_IN_RANGE")] SkillNotInRange = 10,
    /// <summary>
    ///技能未冷却
    /// </summary>
    [pbr::OriginalName("SKILL_IN_CD")] SkillInCd = 11,
    /// <summary>
    ///账号已在线
    /// </summary>
    [pbr::OriginalName("ACCOUNT_IS_ONLINE")] AccountIsOnline = 12,
    /// <summary>
    ///眩晕状态,无法攻击
    /// </summary>
    [pbr::OriginalName("NO_ATTACK")] NoAttack = 13,
    /// <summary>
    ///定身状态,无法移动
    /// </summary>
    [pbr::OriginalName("NO_MOVE")] NoMove = 14,
    /// <summary>
    ///船只已待机
    /// </summary>
    [pbr::OriginalName("SHIP_ALREADY_STANDBY")] ShipAlreadyStandby = 15,
    /// <summary>
    ///舰队为空
    /// </summary>
    [pbr::OriginalName("FLEET_IS_EMPTY")] FleetIsEmpty = 16,
  }

  public enum AttrIndex {
    [pbr::OriginalName("huoli")] Huoli = 0,
    [pbr::OriginalName("naijiu")] Naijiu = 1,
    [pbr::OriginalName("pojia")] Pojia = 2,
    [pbr::OriginalName("hujia")] Hujia = 3,
    [pbr::OriginalName("mingzhong")] Mingzhong = 4,
    [pbr::OriginalName("shanbi")] Shanbi = 5,
    [pbr::OriginalName("shecheng")] Shecheng = 6,
    [pbr::OriginalName("yicheng")] Yicheng = 7,
  }

  #endregion

  #region Messages
  /// <summary>
  ///游戏包数据
  /// </summary>
  public sealed partial class Pkg : pb::IMessage<Pkg> {
    private static readonly pb::MessageParser<Pkg> _parser = new pb::MessageParser<Pkg>(() => new Pkg());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Pkg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.Proto.EmulatorReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Pkg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Pkg(Pkg other) : this() {
      cmd_ = other.cmd_;
      body_ = other.body_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Pkg Clone() {
      return new Pkg(this);
    }

    /// <summary>Field number for the "cmd" field.</summary>
    public const int CmdFieldNumber = 1;
    private int cmd_;
    /// <summary>
    ///命令号，区分不同命令
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Cmd {
      get { return cmd_; }
      set {
        cmd_ = value;
      }
    }

    /// <summary>Field number for the "body" field.</summary>
    public const int BodyFieldNumber = 2;
    private pb::ByteString body_ = pb::ByteString.Empty;
    /// <summary>
    ///包体的二进制数据
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Body {
      get { return body_; }
      set {
        body_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Pkg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Pkg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Cmd != other.Cmd) return false;
      if (Body != other.Body) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Cmd != 0) hash ^= Cmd.GetHashCode();
      if (Body.Length != 0) hash ^= Body.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Cmd != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Cmd);
      }
      if (Body.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Body);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Cmd != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Cmd);
      }
      if (Body.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Body);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Pkg other) {
      if (other == null) {
        return;
      }
      if (other.Cmd != 0) {
        Cmd = other.Cmd;
      }
      if (other.Body.Length != 0) {
        Body = other.Body;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Cmd = input.ReadInt32();
            break;
          }
          case 18: {
            Body = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Error_SC : pb::IMessage<Error_SC> {
    private static readonly pb::MessageParser<Error_SC> _parser = new pb::MessageParser<Error_SC>(() => new Error_SC());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Error_SC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.Proto.EmulatorReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Error_SC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Error_SC(Error_SC other) : this() {
      msgId_ = other.msgId_;
      code_ = other.code_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Error_SC Clone() {
      return new Error_SC(this);
    }

    /// <summary>Field number for the "msg_id" field.</summary>
    public const int MsgIdFieldNumber = 404;
    private int msgId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MsgId {
      get { return msgId_; }
      set {
        msgId_ = value;
      }
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private global::Net.Proto.ErrorCode code_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Net.Proto.ErrorCode Code {
      get { return code_; }
      set {
        code_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Error_SC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Error_SC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MsgId != other.MsgId) return false;
      if (Code != other.Code) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MsgId != 0) hash ^= MsgId.GetHashCode();
      if (Code != 0) hash ^= Code.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Code != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Code);
      }
      if (MsgId != 0) {
        output.WriteRawTag(160, 25);
        output.WriteInt32(MsgId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MsgId != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(MsgId);
      }
      if (Code != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Code);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Error_SC other) {
      if (other == null) {
        return;
      }
      if (other.MsgId != 0) {
        MsgId = other.MsgId;
      }
      if (other.Code != 0) {
        Code = other.Code;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = (global::Net.Proto.ErrorCode) input.ReadEnum();
            break;
          }
          case 3232: {
            MsgId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///--------------------------------
  /// </summary>
  public sealed partial class Login_CS : pb::IMessage<Login_CS> {
    private static readonly pb::MessageParser<Login_CS> _parser = new pb::MessageParser<Login_CS>(() => new Login_CS());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Login_CS> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.Proto.EmulatorReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Login_CS() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Login_CS(Login_CS other) : this() {
      msgId_ = other.msgId_;
      account_ = other.account_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Login_CS Clone() {
      return new Login_CS(this);
    }

    /// <summary>Field number for the "msg_id" field.</summary>
    public const int MsgIdFieldNumber = 80001;
    private int msgId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MsgId {
      get { return msgId_; }
      set {
        msgId_ = value;
      }
    }

    /// <summary>Field number for the "account" field.</summary>
    public const int AccountFieldNumber = 1;
    private string account_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Account {
      get { return account_; }
      set {
        account_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Login_CS);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Login_CS other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MsgId != other.MsgId) return false;
      if (Account != other.Account) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MsgId != 0) hash ^= MsgId.GetHashCode();
      if (Account.Length != 0) hash ^= Account.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Account.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Account);
      }
      if (MsgId != 0) {
        output.WriteRawTag(136, 136, 39);
        output.WriteInt32(MsgId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MsgId != 0) {
        size += 3 + pb::CodedOutputStream.ComputeInt32Size(MsgId);
      }
      if (Account.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Account);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Login_CS other) {
      if (other == null) {
        return;
      }
      if (other.MsgId != 0) {
        MsgId = other.MsgId;
      }
      if (other.Account.Length != 0) {
        Account = other.Account;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Account = input.ReadString();
            break;
          }
          case 640008: {
            MsgId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Logout_CS : pb::IMessage<Logout_CS> {
    private static readonly pb::MessageParser<Logout_CS> _parser = new pb::MessageParser<Logout_CS>(() => new Logout_CS());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Logout_CS> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.Proto.EmulatorReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Logout_CS() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Logout_CS(Logout_CS other) : this() {
      msgId_ = other.msgId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Logout_CS Clone() {
      return new Logout_CS(this);
    }

    /// <summary>Field number for the "msg_id" field.</summary>
    public const int MsgIdFieldNumber = 80002;
    private int msgId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MsgId {
      get { return msgId_; }
      set {
        msgId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Logout_CS);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Logout_CS other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MsgId != other.MsgId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MsgId != 0) hash ^= MsgId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MsgId != 0) {
        output.WriteRawTag(144, 136, 39);
        output.WriteInt32(MsgId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MsgId != 0) {
        size += 3 + pb::CodedOutputStream.ComputeInt32Size(MsgId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Logout_CS other) {
      if (other == null) {
        return;
      }
      if (other.MsgId != 0) {
        MsgId = other.MsgId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 640016: {
            MsgId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PlayInfo_SC : pb::IMessage<PlayInfo_SC> {
    private static readonly pb::MessageParser<PlayInfo_SC> _parser = new pb::MessageParser<PlayInfo_SC>(() => new PlayInfo_SC());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlayInfo_SC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.Proto.EmulatorReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayInfo_SC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayInfo_SC(PlayInfo_SC other) : this() {
      msgId_ = other.msgId_;
      info_ = other.info_ != null ? other.info_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayInfo_SC Clone() {
      return new PlayInfo_SC(this);
    }

    /// <summary>Field number for the "msg_id" field.</summary>
    public const int MsgIdFieldNumber = 80003;
    private int msgId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MsgId {
      get { return msgId_; }
      set {
        msgId_ = value;
      }
    }

    /// <summary>Field number for the "info" field.</summary>
    public const int InfoFieldNumber = 1;
    private global::Net.Proto.PlayInfo info_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Net.Proto.PlayInfo Info {
      get { return info_; }
      set {
        info_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlayInfo_SC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlayInfo_SC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MsgId != other.MsgId) return false;
      if (!object.Equals(Info, other.Info)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MsgId != 0) hash ^= MsgId.GetHashCode();
      if (info_ != null) hash ^= Info.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (info_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Info);
      }
      if (MsgId != 0) {
        output.WriteRawTag(152, 136, 39);
        output.WriteInt32(MsgId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MsgId != 0) {
        size += 3 + pb::CodedOutputStream.ComputeInt32Size(MsgId);
      }
      if (info_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Info);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlayInfo_SC other) {
      if (other == null) {
        return;
      }
      if (other.MsgId != 0) {
        MsgId = other.MsgId;
      }
      if (other.info_ != null) {
        if (info_ == null) {
          Info = new global::Net.Proto.PlayInfo();
        }
        Info.MergeFrom(other.Info);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (info_ == null) {
              Info = new global::Net.Proto.PlayInfo();
            }
            input.ReadMessage(Info);
            break;
          }
          case 640024: {
            MsgId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PlayInfo : pb::IMessage<PlayInfo> {
    private static readonly pb::MessageParser<PlayInfo> _parser = new pb::MessageParser<PlayInfo>(() => new PlayInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlayInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.Proto.EmulatorReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayInfo(PlayInfo other) : this() {
      account_ = other.account_;
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayInfo Clone() {
      return new PlayInfo(this);
    }

    /// <summary>Field number for the "account" field.</summary>
    public const int AccountFieldNumber = 1;
    private string account_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Account {
      get { return account_; }
      set {
        account_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlayInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlayInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Account != other.Account) return false;
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Account.Length != 0) hash ^= Account.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Account.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Account);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Account.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Account);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlayInfo other) {
      if (other == null) {
        return;
      }
      if (other.Account.Length != 0) {
        Account = other.Account;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Account = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///----------------------------------
  /// </summary>
  public sealed partial class CreateRoom_CS : pb::IMessage<CreateRoom_CS> {
    private static readonly pb::MessageParser<CreateRoom_CS> _parser = new pb::MessageParser<CreateRoom_CS>(() => new CreateRoom_CS());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateRoom_CS> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.Proto.EmulatorReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateRoom_CS() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateRoom_CS(CreateRoom_CS other) : this() {
      msgId_ = other.msgId_;
      mapId_ = other.mapId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateRoom_CS Clone() {
      return new CreateRoom_CS(this);
    }

    /// <summary>Field number for the "msg_id" field.</summary>
    public const int MsgIdFieldNumber = 81000;
    private int msgId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MsgId {
      get { return msgId_; }
      set {
        msgId_ = value;
      }
    }

    /// <summary>Field number for the "map_id" field.</summary>
    public const int MapIdFieldNumber = 1;
    private int mapId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MapId {
      get { return mapId_; }
      set {
        mapId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateRoom_CS);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateRoom_CS other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MsgId != other.MsgId) return false;
      if (MapId != other.MapId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MsgId != 0) hash ^= MsgId.GetHashCode();
      if (MapId != 0) hash ^= MapId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MapId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(MapId);
      }
      if (MsgId != 0) {
        output.WriteRawTag(192, 198, 39);
        output.WriteInt32(MsgId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MsgId != 0) {
        size += 3 + pb::CodedOutputStream.ComputeInt32Size(MsgId);
      }
      if (MapId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MapId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateRoom_CS other) {
      if (other == null) {
        return;
      }
      if (other.MsgId != 0) {
        MsgId = other.MsgId;
      }
      if (other.MapId != 0) {
        MapId = other.MapId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MapId = input.ReadInt32();
            break;
          }
          case 648000: {
            MsgId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class JoinRoom_CS : pb::IMessage<JoinRoom_CS> {
    private static readonly pb::MessageParser<JoinRoom_CS> _parser = new pb::MessageParser<JoinRoom_CS>(() => new JoinRoom_CS());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<JoinRoom_CS> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.Proto.EmulatorReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JoinRoom_CS() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JoinRoom_CS(JoinRoom_CS other) : this() {
      msgId_ = other.msgId_;
      roomId_ = other.roomId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JoinRoom_CS Clone() {
      return new JoinRoom_CS(this);
    }

    /// <summary>Field number for the "msg_id" field.</summary>
    public const int MsgIdFieldNumber = 81001;
    private int msgId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MsgId {
      get { return msgId_; }
      set {
        msgId_ = value;
      }
    }

    /// <summary>Field number for the "room_id" field.</summary>
    public const int RoomIdFieldNumber = 1;
    private int roomId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RoomId {
      get { return roomId_; }
      set {
        roomId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as JoinRoom_CS);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(JoinRoom_CS other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MsgId != other.MsgId) return false;
      if (RoomId != other.RoomId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MsgId != 0) hash ^= MsgId.GetHashCode();
      if (RoomId != 0) hash ^= RoomId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RoomId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(RoomId);
      }
      if (MsgId != 0) {
        output.WriteRawTag(200, 198, 39);
        output.WriteInt32(MsgId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MsgId != 0) {
        size += 3 + pb::CodedOutputStream.ComputeInt32Size(MsgId);
      }
      if (RoomId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RoomId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(JoinRoom_CS other) {
      if (other == null) {
        return;
      }
      if (other.MsgId != 0) {
        MsgId = other.MsgId;
      }
      if (other.RoomId != 0) {
        RoomId = other.RoomId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RoomId = input.ReadInt32();
            break;
          }
          case 648008: {
            MsgId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ReadyGo_CS : pb::IMessage<ReadyGo_CS> {
    private static readonly pb::MessageParser<ReadyGo_CS> _parser = new pb::MessageParser<ReadyGo_CS>(() => new ReadyGo_CS());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReadyGo_CS> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.Proto.EmulatorReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReadyGo_CS() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReadyGo_CS(ReadyGo_CS other) : this() {
      msgId_ = other.msgId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReadyGo_CS Clone() {
      return new ReadyGo_CS(this);
    }

    /// <summary>Field number for the "msg_id" field.</summary>
    public const int MsgIdFieldNumber = 81002;
    private int msgId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MsgId {
      get { return msgId_; }
      set {
        msgId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReadyGo_CS);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReadyGo_CS other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MsgId != other.MsgId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MsgId != 0) hash ^= MsgId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MsgId != 0) {
        output.WriteRawTag(208, 198, 39);
        output.WriteInt32(MsgId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MsgId != 0) {
        size += 3 + pb::CodedOutputStream.ComputeInt32Size(MsgId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReadyGo_CS other) {
      if (other == null) {
        return;
      }
      if (other.MsgId != 0) {
        MsgId = other.MsgId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 648016: {
            MsgId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RoomInfo_SC : pb::IMessage<RoomInfo_SC> {
    private static readonly pb::MessageParser<RoomInfo_SC> _parser = new pb::MessageParser<RoomInfo_SC>(() => new RoomInfo_SC());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RoomInfo_SC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.Proto.EmulatorReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomInfo_SC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomInfo_SC(RoomInfo_SC other) : this() {
      msgId_ = other.msgId_;
      room_ = other.room_ != null ? other.room_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomInfo_SC Clone() {
      return new RoomInfo_SC(this);
    }

    /// <summary>Field number for the "msg_id" field.</summary>
    public const int MsgIdFieldNumber = 81003;
    private int msgId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MsgId {
      get { return msgId_; }
      set {
        msgId_ = value;
      }
    }

    /// <summary>Field number for the "room" field.</summary>
    public const int RoomFieldNumber = 1;
    private global::Net.Proto.RoomInfo room_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Net.Proto.RoomInfo Room {
      get { return room_; }
      set {
        room_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RoomInfo_SC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RoomInfo_SC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MsgId != other.MsgId) return false;
      if (!object.Equals(Room, other.Room)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MsgId != 0) hash ^= MsgId.GetHashCode();
      if (room_ != null) hash ^= Room.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (room_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Room);
      }
      if (MsgId != 0) {
        output.WriteRawTag(216, 198, 39);
        output.WriteInt32(MsgId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MsgId != 0) {
        size += 3 + pb::CodedOutputStream.ComputeInt32Size(MsgId);
      }
      if (room_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Room);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RoomInfo_SC other) {
      if (other == null) {
        return;
      }
      if (other.MsgId != 0) {
        MsgId = other.MsgId;
      }
      if (other.room_ != null) {
        if (room_ == null) {
          Room = new global::Net.Proto.RoomInfo();
        }
        Room.MergeFrom(other.Room);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (room_ == null) {
              Room = new global::Net.Proto.RoomInfo();
            }
            input.ReadMessage(Room);
            break;
          }
          case 648024: {
            MsgId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///跳转战斗地图
  /// </summary>
  public sealed partial class JumpToBattleField_SC : pb::IMessage<JumpToBattleField_SC> {
    private static readonly pb::MessageParser<JumpToBattleField_SC> _parser = new pb::MessageParser<JumpToBattleField_SC>(() => new JumpToBattleField_SC());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<JumpToBattleField_SC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.Proto.EmulatorReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JumpToBattleField_SC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JumpToBattleField_SC(JumpToBattleField_SC other) : this() {
      msgId_ = other.msgId_;
      battleFieldInfo_ = other.battleFieldInfo_ != null ? other.battleFieldInfo_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JumpToBattleField_SC Clone() {
      return new JumpToBattleField_SC(this);
    }

    /// <summary>Field number for the "msg_id" field.</summary>
    public const int MsgIdFieldNumber = 81004;
    private int msgId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MsgId {
      get { return msgId_; }
      set {
        msgId_ = value;
      }
    }

    /// <summary>Field number for the "battleFieldInfo" field.</summary>
    public const int BattleFieldInfoFieldNumber = 1;
    private global::Net.Proto.BattleFieldInfo battleFieldInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Net.Proto.BattleFieldInfo BattleFieldInfo {
      get { return battleFieldInfo_; }
      set {
        battleFieldInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as JumpToBattleField_SC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(JumpToBattleField_SC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MsgId != other.MsgId) return false;
      if (!object.Equals(BattleFieldInfo, other.BattleFieldInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MsgId != 0) hash ^= MsgId.GetHashCode();
      if (battleFieldInfo_ != null) hash ^= BattleFieldInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (battleFieldInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(BattleFieldInfo);
      }
      if (MsgId != 0) {
        output.WriteRawTag(224, 198, 39);
        output.WriteInt32(MsgId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MsgId != 0) {
        size += 3 + pb::CodedOutputStream.ComputeInt32Size(MsgId);
      }
      if (battleFieldInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BattleFieldInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(JumpToBattleField_SC other) {
      if (other == null) {
        return;
      }
      if (other.MsgId != 0) {
        MsgId = other.MsgId;
      }
      if (other.battleFieldInfo_ != null) {
        if (battleFieldInfo_ == null) {
          BattleFieldInfo = new global::Net.Proto.BattleFieldInfo();
        }
        BattleFieldInfo.MergeFrom(other.BattleFieldInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (battleFieldInfo_ == null) {
              BattleFieldInfo = new global::Net.Proto.BattleFieldInfo();
            }
            input.ReadMessage(BattleFieldInfo);
            break;
          }
          case 648032: {
            MsgId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ExitRoom_CS : pb::IMessage<ExitRoom_CS> {
    private static readonly pb::MessageParser<ExitRoom_CS> _parser = new pb::MessageParser<ExitRoom_CS>(() => new ExitRoom_CS());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ExitRoom_CS> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.Proto.EmulatorReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExitRoom_CS() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExitRoom_CS(ExitRoom_CS other) : this() {
      msgId_ = other.msgId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExitRoom_CS Clone() {
      return new ExitRoom_CS(this);
    }

    /// <summary>Field number for the "msg_id" field.</summary>
    public const int MsgIdFieldNumber = 81005;
    private int msgId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MsgId {
      get { return msgId_; }
      set {
        msgId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ExitRoom_CS);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ExitRoom_CS other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MsgId != other.MsgId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MsgId != 0) hash ^= MsgId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MsgId != 0) {
        output.WriteRawTag(232, 198, 39);
        output.WriteInt32(MsgId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MsgId != 0) {
        size += 3 + pb::CodedOutputStream.ComputeInt32Size(MsgId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ExitRoom_CS other) {
      if (other == null) {
        return;
      }
      if (other.MsgId != 0) {
        MsgId = other.MsgId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 648040: {
            MsgId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CloseRoom_CS : pb::IMessage<CloseRoom_CS> {
    private static readonly pb::MessageParser<CloseRoom_CS> _parser = new pb::MessageParser<CloseRoom_CS>(() => new CloseRoom_CS());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CloseRoom_CS> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.Proto.EmulatorReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CloseRoom_CS() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CloseRoom_CS(CloseRoom_CS other) : this() {
      msgId_ = other.msgId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CloseRoom_CS Clone() {
      return new CloseRoom_CS(this);
    }

    /// <summary>Field number for the "msg_id" field.</summary>
    public const int MsgIdFieldNumber = 81006;
    private int msgId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MsgId {
      get { return msgId_; }
      set {
        msgId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CloseRoom_CS);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CloseRoom_CS other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MsgId != other.MsgId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MsgId != 0) hash ^= MsgId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MsgId != 0) {
        output.WriteRawTag(240, 198, 39);
        output.WriteInt32(MsgId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MsgId != 0) {
        size += 3 + pb::CodedOutputStream.ComputeInt32Size(MsgId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CloseRoom_CS other) {
      if (other == null) {
        return;
      }
      if (other.MsgId != 0) {
        MsgId = other.MsgId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 648048: {
            MsgId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///设置舰队
  /// </summary>
  public sealed partial class SetFleet_CS : pb::IMessage<SetFleet_CS> {
    private static readonly pb::MessageParser<SetFleet_CS> _parser = new pb::MessageParser<SetFleet_CS>(() => new SetFleet_CS());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SetFleet_CS> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.Proto.EmulatorReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetFleet_CS() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetFleet_CS(SetFleet_CS other) : this() {
      msgId_ = other.msgId_;
      ships_ = other.ships_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetFleet_CS Clone() {
      return new SetFleet_CS(this);
    }

    /// <summary>Field number for the "msg_id" field.</summary>
    public const int MsgIdFieldNumber = 81007;
    private int msgId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MsgId {
      get { return msgId_; }
      set {
        msgId_ = value;
      }
    }

    /// <summary>Field number for the "ships" field.</summary>
    public const int ShipsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Net.Proto.BattleShip> _repeated_ships_codec
        = pb::FieldCodec.ForMessage(10, global::Net.Proto.BattleShip.Parser);
    private readonly pbc::RepeatedField<global::Net.Proto.BattleShip> ships_ = new pbc::RepeatedField<global::Net.Proto.BattleShip>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Net.Proto.BattleShip> Ships {
      get { return ships_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SetFleet_CS);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SetFleet_CS other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MsgId != other.MsgId) return false;
      if(!ships_.Equals(other.ships_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MsgId != 0) hash ^= MsgId.GetHashCode();
      hash ^= ships_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      ships_.WriteTo(output, _repeated_ships_codec);
      if (MsgId != 0) {
        output.WriteRawTag(248, 198, 39);
        output.WriteInt32(MsgId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MsgId != 0) {
        size += 3 + pb::CodedOutputStream.ComputeInt32Size(MsgId);
      }
      size += ships_.CalculateSize(_repeated_ships_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SetFleet_CS other) {
      if (other == null) {
        return;
      }
      if (other.MsgId != 0) {
        MsgId = other.MsgId;
      }
      ships_.Add(other.ships_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ships_.AddEntriesFrom(input, _repeated_ships_codec);
            break;
          }
          case 648056: {
            MsgId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RoomInfo : pb::IMessage<RoomInfo> {
    private static readonly pb::MessageParser<RoomInfo> _parser = new pb::MessageParser<RoomInfo>(() => new RoomInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RoomInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.Proto.EmulatorReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomInfo(RoomInfo other) : this() {
      roomId_ = other.roomId_;
      mapId_ = other.mapId_;
      owner_ = other.owner_;
      maxNum_ = other.maxNum_;
      num_ = other.num_;
      players_ = other.players_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomInfo Clone() {
      return new RoomInfo(this);
    }

    /// <summary>Field number for the "room_id" field.</summary>
    public const int RoomIdFieldNumber = 1;
    private int roomId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RoomId {
      get { return roomId_; }
      set {
        roomId_ = value;
      }
    }

    /// <summary>Field number for the "map_id" field.</summary>
    public const int MapIdFieldNumber = 2;
    private int mapId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MapId {
      get { return mapId_; }
      set {
        mapId_ = value;
      }
    }

    /// <summary>Field number for the "owner" field.</summary>
    public const int OwnerFieldNumber = 3;
    private string owner_ = "";
    /// <summary>
    ///房主
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Owner {
      get { return owner_; }
      set {
        owner_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "max_num" field.</summary>
    public const int MaxNumFieldNumber = 4;
    private int maxNum_;
    /// <summary>
    ///最大人数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MaxNum {
      get { return maxNum_; }
      set {
        maxNum_ = value;
      }
    }

    /// <summary>Field number for the "num" field.</summary>
    public const int NumFieldNumber = 5;
    private int num_;
    /// <summary>
    ///当前人数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Num {
      get { return num_; }
      set {
        num_ = value;
      }
    }

    /// <summary>Field number for the "players" field.</summary>
    public const int PlayersFieldNumber = 6;
    private static readonly pb::FieldCodec<global::Net.Proto.RoomPlayer> _repeated_players_codec
        = pb::FieldCodec.ForMessage(50, global::Net.Proto.RoomPlayer.Parser);
    private readonly pbc::RepeatedField<global::Net.Proto.RoomPlayer> players_ = new pbc::RepeatedField<global::Net.Proto.RoomPlayer>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Net.Proto.RoomPlayer> Players {
      get { return players_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RoomInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RoomInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RoomId != other.RoomId) return false;
      if (MapId != other.MapId) return false;
      if (Owner != other.Owner) return false;
      if (MaxNum != other.MaxNum) return false;
      if (Num != other.Num) return false;
      if(!players_.Equals(other.players_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RoomId != 0) hash ^= RoomId.GetHashCode();
      if (MapId != 0) hash ^= MapId.GetHashCode();
      if (Owner.Length != 0) hash ^= Owner.GetHashCode();
      if (MaxNum != 0) hash ^= MaxNum.GetHashCode();
      if (Num != 0) hash ^= Num.GetHashCode();
      hash ^= players_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RoomId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(RoomId);
      }
      if (MapId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(MapId);
      }
      if (Owner.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Owner);
      }
      if (MaxNum != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(MaxNum);
      }
      if (Num != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Num);
      }
      players_.WriteTo(output, _repeated_players_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RoomId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RoomId);
      }
      if (MapId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MapId);
      }
      if (Owner.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Owner);
      }
      if (MaxNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxNum);
      }
      if (Num != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Num);
      }
      size += players_.CalculateSize(_repeated_players_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RoomInfo other) {
      if (other == null) {
        return;
      }
      if (other.RoomId != 0) {
        RoomId = other.RoomId;
      }
      if (other.MapId != 0) {
        MapId = other.MapId;
      }
      if (other.Owner.Length != 0) {
        Owner = other.Owner;
      }
      if (other.MaxNum != 0) {
        MaxNum = other.MaxNum;
      }
      if (other.Num != 0) {
        Num = other.Num;
      }
      players_.Add(other.players_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RoomId = input.ReadInt32();
            break;
          }
          case 16: {
            MapId = input.ReadInt32();
            break;
          }
          case 26: {
            Owner = input.ReadString();
            break;
          }
          case 32: {
            MaxNum = input.ReadInt32();
            break;
          }
          case 40: {
            Num = input.ReadInt32();
            break;
          }
          case 50: {
            players_.AddEntriesFrom(input, _repeated_players_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class RoomPlayer : pb::IMessage<RoomPlayer> {
    private static readonly pb::MessageParser<RoomPlayer> _parser = new pb::MessageParser<RoomPlayer>(() => new RoomPlayer());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RoomPlayer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.Proto.EmulatorReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomPlayer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomPlayer(RoomPlayer other) : this() {
      account_ = other.account_;
      isReady_ = other.isReady_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomPlayer Clone() {
      return new RoomPlayer(this);
    }

    /// <summary>Field number for the "account" field.</summary>
    public const int AccountFieldNumber = 1;
    private string account_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Account {
      get { return account_; }
      set {
        account_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "isReady" field.</summary>
    public const int IsReadyFieldNumber = 2;
    private bool isReady_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsReady {
      get { return isReady_; }
      set {
        isReady_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RoomPlayer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RoomPlayer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Account != other.Account) return false;
      if (IsReady != other.IsReady) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Account.Length != 0) hash ^= Account.GetHashCode();
      if (IsReady != false) hash ^= IsReady.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Account.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Account);
      }
      if (IsReady != false) {
        output.WriteRawTag(16);
        output.WriteBool(IsReady);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Account.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Account);
      }
      if (IsReady != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RoomPlayer other) {
      if (other == null) {
        return;
      }
      if (other.Account.Length != 0) {
        Account = other.Account;
      }
      if (other.IsReady != false) {
        IsReady = other.IsReady;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Account = input.ReadString();
            break;
          }
          case 16: {
            IsReady = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///----------------------------------
  /// </summary>
  public sealed partial class BattleFieldInfo : pb::IMessage<BattleFieldInfo> {
    private static readonly pb::MessageParser<BattleFieldInfo> _parser = new pb::MessageParser<BattleFieldInfo>(() => new BattleFieldInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BattleFieldInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.Proto.EmulatorReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BattleFieldInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BattleFieldInfo(BattleFieldInfo other) : this() {
      mapId_ = other.mapId_;
      fleets_ = other.fleets_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BattleFieldInfo Clone() {
      return new BattleFieldInfo(this);
    }

    /// <summary>Field number for the "map_id" field.</summary>
    public const int MapIdFieldNumber = 1;
    private int mapId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MapId {
      get { return mapId_; }
      set {
        mapId_ = value;
      }
    }

    /// <summary>Field number for the "fleets" field.</summary>
    public const int FleetsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Net.Proto.BattleFleet> _repeated_fleets_codec
        = pb::FieldCodec.ForMessage(18, global::Net.Proto.BattleFleet.Parser);
    private readonly pbc::RepeatedField<global::Net.Proto.BattleFleet> fleets_ = new pbc::RepeatedField<global::Net.Proto.BattleFleet>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Net.Proto.BattleFleet> Fleets {
      get { return fleets_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BattleFieldInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BattleFieldInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MapId != other.MapId) return false;
      if(!fleets_.Equals(other.fleets_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MapId != 0) hash ^= MapId.GetHashCode();
      hash ^= fleets_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MapId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(MapId);
      }
      fleets_.WriteTo(output, _repeated_fleets_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MapId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MapId);
      }
      size += fleets_.CalculateSize(_repeated_fleets_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BattleFieldInfo other) {
      if (other == null) {
        return;
      }
      if (other.MapId != 0) {
        MapId = other.MapId;
      }
      fleets_.Add(other.fleets_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MapId = input.ReadInt32();
            break;
          }
          case 18: {
            fleets_.AddEntriesFrom(input, _repeated_fleets_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class BattleFleet : pb::IMessage<BattleFleet> {
    private static readonly pb::MessageParser<BattleFleet> _parser = new pb::MessageParser<BattleFleet>(() => new BattleFleet());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BattleFleet> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.Proto.EmulatorReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BattleFleet() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BattleFleet(BattleFleet other) : this() {
      account_ = other.account_;
      shipList_ = other.shipList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BattleFleet Clone() {
      return new BattleFleet(this);
    }

    /// <summary>Field number for the "account" field.</summary>
    public const int AccountFieldNumber = 1;
    private string account_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Account {
      get { return account_; }
      set {
        account_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ship_list" field.</summary>
    public const int ShipListFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Net.Proto.BattleShip> _repeated_shipList_codec
        = pb::FieldCodec.ForMessage(18, global::Net.Proto.BattleShip.Parser);
    private readonly pbc::RepeatedField<global::Net.Proto.BattleShip> shipList_ = new pbc::RepeatedField<global::Net.Proto.BattleShip>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Net.Proto.BattleShip> ShipList {
      get { return shipList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BattleFleet);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BattleFleet other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Account != other.Account) return false;
      if(!shipList_.Equals(other.shipList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Account.Length != 0) hash ^= Account.GetHashCode();
      hash ^= shipList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Account.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Account);
      }
      shipList_.WriteTo(output, _repeated_shipList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Account.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Account);
      }
      size += shipList_.CalculateSize(_repeated_shipList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BattleFleet other) {
      if (other == null) {
        return;
      }
      if (other.Account.Length != 0) {
        Account = other.Account;
      }
      shipList_.Add(other.shipList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Account = input.ReadString();
            break;
          }
          case 18: {
            shipList_.AddEntriesFrom(input, _repeated_shipList_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class BattleShip : pb::IMessage<BattleShip> {
    private static readonly pb::MessageParser<BattleShip> _parser = new pb::MessageParser<BattleShip>(() => new BattleShip());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BattleShip> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.Proto.EmulatorReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BattleShip() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BattleShip(BattleShip other) : this() {
      guid_ = other.guid_;
      id_ = other.id_;
      position_ = other.position_ != null ? other.position_.Clone() : null;
      maxHp_ = other.maxHp_;
      hp_ = other.hp_;
      attrs_ = other.attrs_.Clone();
      skills_ = other.skills_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BattleShip Clone() {
      return new BattleShip(this);
    }

    /// <summary>Field number for the "guid" field.</summary>
    public const int GuidFieldNumber = 1;
    private string guid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Guid {
      get { return guid_; }
      set {
        guid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 2;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "position" field.</summary>
    public const int PositionFieldNumber = 3;
    private global::Net.Proto.Position position_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Net.Proto.Position Position {
      get { return position_; }
      set {
        position_ = value;
      }
    }

    /// <summary>Field number for the "max_hp" field.</summary>
    public const int MaxHpFieldNumber = 4;
    private int maxHp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MaxHp {
      get { return maxHp_; }
      set {
        maxHp_ = value;
      }
    }

    /// <summary>Field number for the "hp" field.</summary>
    public const int HpFieldNumber = 5;
    private int hp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Hp {
      get { return hp_; }
      set {
        hp_ = value;
      }
    }

    /// <summary>Field number for the "attrs" field.</summary>
    public const int AttrsFieldNumber = 6;
    private static readonly pb::FieldCodec<global::Net.Proto.Attr> _repeated_attrs_codec
        = pb::FieldCodec.ForMessage(50, global::Net.Proto.Attr.Parser);
    private readonly pbc::RepeatedField<global::Net.Proto.Attr> attrs_ = new pbc::RepeatedField<global::Net.Proto.Attr>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Net.Proto.Attr> Attrs {
      get { return attrs_; }
    }

    /// <summary>Field number for the "skills" field.</summary>
    public const int SkillsFieldNumber = 7;
    private static readonly pb::FieldCodec<global::Net.Proto.Skill> _repeated_skills_codec
        = pb::FieldCodec.ForMessage(58, global::Net.Proto.Skill.Parser);
    private readonly pbc::RepeatedField<global::Net.Proto.Skill> skills_ = new pbc::RepeatedField<global::Net.Proto.Skill>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Net.Proto.Skill> Skills {
      get { return skills_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BattleShip);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BattleShip other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Guid != other.Guid) return false;
      if (Id != other.Id) return false;
      if (!object.Equals(Position, other.Position)) return false;
      if (MaxHp != other.MaxHp) return false;
      if (Hp != other.Hp) return false;
      if(!attrs_.Equals(other.attrs_)) return false;
      if(!skills_.Equals(other.skills_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Guid.Length != 0) hash ^= Guid.GetHashCode();
      if (Id != 0) hash ^= Id.GetHashCode();
      if (position_ != null) hash ^= Position.GetHashCode();
      if (MaxHp != 0) hash ^= MaxHp.GetHashCode();
      if (Hp != 0) hash ^= Hp.GetHashCode();
      hash ^= attrs_.GetHashCode();
      hash ^= skills_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Guid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Guid);
      }
      if (Id != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Id);
      }
      if (position_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Position);
      }
      if (MaxHp != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(MaxHp);
      }
      if (Hp != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Hp);
      }
      attrs_.WriteTo(output, _repeated_attrs_codec);
      skills_.WriteTo(output, _repeated_skills_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Guid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Guid);
      }
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (position_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Position);
      }
      if (MaxHp != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxHp);
      }
      if (Hp != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Hp);
      }
      size += attrs_.CalculateSize(_repeated_attrs_codec);
      size += skills_.CalculateSize(_repeated_skills_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BattleShip other) {
      if (other == null) {
        return;
      }
      if (other.Guid.Length != 0) {
        Guid = other.Guid;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.position_ != null) {
        if (position_ == null) {
          Position = new global::Net.Proto.Position();
        }
        Position.MergeFrom(other.Position);
      }
      if (other.MaxHp != 0) {
        MaxHp = other.MaxHp;
      }
      if (other.Hp != 0) {
        Hp = other.Hp;
      }
      attrs_.Add(other.attrs_);
      skills_.Add(other.skills_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Guid = input.ReadString();
            break;
          }
          case 16: {
            Id = input.ReadInt32();
            break;
          }
          case 26: {
            if (position_ == null) {
              Position = new global::Net.Proto.Position();
            }
            input.ReadMessage(Position);
            break;
          }
          case 32: {
            MaxHp = input.ReadInt32();
            break;
          }
          case 40: {
            Hp = input.ReadInt32();
            break;
          }
          case 50: {
            attrs_.AddEntriesFrom(input, _repeated_attrs_codec);
            break;
          }
          case 58: {
            skills_.AddEntriesFrom(input, _repeated_skills_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Position : pb::IMessage<Position> {
    private static readonly pb::MessageParser<Position> _parser = new pb::MessageParser<Position>(() => new Position());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Position> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.Proto.EmulatorReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Position() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Position(Position other) : this() {
      x_ = other.x_;
      y_ = other.y_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Position Clone() {
      return new Position(this);
    }

    /// <summary>Field number for the "x" field.</summary>
    public const int XFieldNumber = 1;
    private int x_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int X {
      get { return x_; }
      set {
        x_ = value;
      }
    }

    /// <summary>Field number for the "y" field.</summary>
    public const int YFieldNumber = 2;
    private int y_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Y {
      get { return y_; }
      set {
        y_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Position);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Position other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (X != other.X) return false;
      if (Y != other.Y) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (X != 0) hash ^= X.GetHashCode();
      if (Y != 0) hash ^= Y.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (X != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(X);
      }
      if (Y != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Y);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (X != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(X);
      }
      if (Y != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Y);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Position other) {
      if (other == null) {
        return;
      }
      if (other.X != 0) {
        X = other.X;
      }
      if (other.Y != 0) {
        Y = other.Y;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            X = input.ReadInt32();
            break;
          }
          case 16: {
            Y = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Attr : pb::IMessage<Attr> {
    private static readonly pb::MessageParser<Attr> _parser = new pb::MessageParser<Attr>(() => new Attr());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Attr> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.Proto.EmulatorReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Attr() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Attr(Attr other) : this() {
      index_ = other.index_;
      value_ = other.value_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Attr Clone() {
      return new Attr(this);
    }

    /// <summary>Field number for the "index" field.</summary>
    public const int IndexFieldNumber = 1;
    private global::Net.Proto.AttrIndex index_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Net.Proto.AttrIndex Index {
      get { return index_; }
      set {
        index_ = value;
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 2;
    private int value_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Value {
      get { return value_; }
      set {
        value_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Attr);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Attr other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Index != other.Index) return false;
      if (Value != other.Value) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Index != 0) hash ^= Index.GetHashCode();
      if (Value != 0) hash ^= Value.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Index != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Index);
      }
      if (Value != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Index != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Index);
      }
      if (Value != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Value);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Attr other) {
      if (other == null) {
        return;
      }
      if (other.Index != 0) {
        Index = other.Index;
      }
      if (other.Value != 0) {
        Value = other.Value;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Index = (global::Net.Proto.AttrIndex) input.ReadEnum();
            break;
          }
          case 16: {
            Value = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Buff : pb::IMessage<Buff> {
    private static readonly pb::MessageParser<Buff> _parser = new pb::MessageParser<Buff>(() => new Buff());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Buff> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.Proto.EmulatorReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Buff() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Buff(Buff other) : this() {
      shipGuid_ = other.shipGuid_;
      guid_ = other.guid_;
      id_ = other.id_;
      roundNum_ = other.roundNum_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Buff Clone() {
      return new Buff(this);
    }

    /// <summary>Field number for the "ship_guid" field.</summary>
    public const int ShipGuidFieldNumber = 1;
    private string shipGuid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ShipGuid {
      get { return shipGuid_; }
      set {
        shipGuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "guid" field.</summary>
    public const int GuidFieldNumber = 2;
    private string guid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Guid {
      get { return guid_; }
      set {
        guid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 3;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "round_num" field.</summary>
    public const int RoundNumFieldNumber = 4;
    private int roundNum_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RoundNum {
      get { return roundNum_; }
      set {
        roundNum_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Buff);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Buff other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ShipGuid != other.ShipGuid) return false;
      if (Guid != other.Guid) return false;
      if (Id != other.Id) return false;
      if (RoundNum != other.RoundNum) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ShipGuid.Length != 0) hash ^= ShipGuid.GetHashCode();
      if (Guid.Length != 0) hash ^= Guid.GetHashCode();
      if (Id != 0) hash ^= Id.GetHashCode();
      if (RoundNum != 0) hash ^= RoundNum.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ShipGuid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ShipGuid);
      }
      if (Guid.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Guid);
      }
      if (Id != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Id);
      }
      if (RoundNum != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(RoundNum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ShipGuid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ShipGuid);
      }
      if (Guid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Guid);
      }
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (RoundNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RoundNum);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Buff other) {
      if (other == null) {
        return;
      }
      if (other.ShipGuid.Length != 0) {
        ShipGuid = other.ShipGuid;
      }
      if (other.Guid.Length != 0) {
        Guid = other.Guid;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.RoundNum != 0) {
        RoundNum = other.RoundNum;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ShipGuid = input.ReadString();
            break;
          }
          case 18: {
            Guid = input.ReadString();
            break;
          }
          case 24: {
            Id = input.ReadInt32();
            break;
          }
          case 32: {
            RoundNum = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Skill : pb::IMessage<Skill> {
    private static readonly pb::MessageParser<Skill> _parser = new pb::MessageParser<Skill>(() => new Skill());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Skill> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.Proto.EmulatorReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Skill() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Skill(Skill other) : this() {
      guid_ = other.guid_;
      id_ = other.id_;
      level_ = other.level_;
      cd_ = other.cd_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Skill Clone() {
      return new Skill(this);
    }

    /// <summary>Field number for the "guid" field.</summary>
    public const int GuidFieldNumber = 1;
    private string guid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Guid {
      get { return guid_; }
      set {
        guid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 2;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "level" field.</summary>
    public const int LevelFieldNumber = 3;
    private int level_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Level {
      get { return level_; }
      set {
        level_ = value;
      }
    }

    /// <summary>Field number for the "cd" field.</summary>
    public const int CdFieldNumber = 4;
    private int cd_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Cd {
      get { return cd_; }
      set {
        cd_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Skill);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Skill other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Guid != other.Guid) return false;
      if (Id != other.Id) return false;
      if (Level != other.Level) return false;
      if (Cd != other.Cd) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Guid.Length != 0) hash ^= Guid.GetHashCode();
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Level != 0) hash ^= Level.GetHashCode();
      if (Cd != 0) hash ^= Cd.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Guid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Guid);
      }
      if (Id != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Id);
      }
      if (Level != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Level);
      }
      if (Cd != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Cd);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Guid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Guid);
      }
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Level != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Level);
      }
      if (Cd != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Cd);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Skill other) {
      if (other == null) {
        return;
      }
      if (other.Guid.Length != 0) {
        Guid = other.Guid;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Level != 0) {
        Level = other.Level;
      }
      if (other.Cd != 0) {
        Cd = other.Cd;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Guid = input.ReadString();
            break;
          }
          case 16: {
            Id = input.ReadInt32();
            break;
          }
          case 24: {
            Level = input.ReadInt32();
            break;
          }
          case 32: {
            Cd = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ShipUp_CS : pb::IMessage<ShipUp_CS> {
    private static readonly pb::MessageParser<ShipUp_CS> _parser = new pb::MessageParser<ShipUp_CS>(() => new ShipUp_CS());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ShipUp_CS> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.Proto.EmulatorReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShipUp_CS() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShipUp_CS(ShipUp_CS other) : this() {
      msgId_ = other.msgId_;
      guid_ = other.guid_;
      to_ = other.to_ != null ? other.to_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShipUp_CS Clone() {
      return new ShipUp_CS(this);
    }

    /// <summary>Field number for the "msg_id" field.</summary>
    public const int MsgIdFieldNumber = 81111;
    private int msgId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MsgId {
      get { return msgId_; }
      set {
        msgId_ = value;
      }
    }

    /// <summary>Field number for the "guid" field.</summary>
    public const int GuidFieldNumber = 1;
    private string guid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Guid {
      get { return guid_; }
      set {
        guid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "to" field.</summary>
    public const int ToFieldNumber = 2;
    private global::Net.Proto.Position to_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Net.Proto.Position To {
      get { return to_; }
      set {
        to_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ShipUp_CS);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ShipUp_CS other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MsgId != other.MsgId) return false;
      if (Guid != other.Guid) return false;
      if (!object.Equals(To, other.To)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MsgId != 0) hash ^= MsgId.GetHashCode();
      if (Guid.Length != 0) hash ^= Guid.GetHashCode();
      if (to_ != null) hash ^= To.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Guid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Guid);
      }
      if (to_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(To);
      }
      if (MsgId != 0) {
        output.WriteRawTag(184, 205, 39);
        output.WriteInt32(MsgId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MsgId != 0) {
        size += 3 + pb::CodedOutputStream.ComputeInt32Size(MsgId);
      }
      if (Guid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Guid);
      }
      if (to_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(To);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ShipUp_CS other) {
      if (other == null) {
        return;
      }
      if (other.MsgId != 0) {
        MsgId = other.MsgId;
      }
      if (other.Guid.Length != 0) {
        Guid = other.Guid;
      }
      if (other.to_ != null) {
        if (to_ == null) {
          To = new global::Net.Proto.Position();
        }
        To.MergeFrom(other.To);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Guid = input.ReadString();
            break;
          }
          case 18: {
            if (to_ == null) {
              To = new global::Net.Proto.Position();
            }
            input.ReadMessage(To);
            break;
          }
          case 648888: {
            MsgId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ShipUp_SC : pb::IMessage<ShipUp_SC> {
    private static readonly pb::MessageParser<ShipUp_SC> _parser = new pb::MessageParser<ShipUp_SC>(() => new ShipUp_SC());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ShipUp_SC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.Proto.EmulatorReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShipUp_SC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShipUp_SC(ShipUp_SC other) : this() {
      msgId_ = other.msgId_;
      guid_ = other.guid_;
      to_ = other.to_ != null ? other.to_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShipUp_SC Clone() {
      return new ShipUp_SC(this);
    }

    /// <summary>Field number for the "msg_id" field.</summary>
    public const int MsgIdFieldNumber = 81112;
    private int msgId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MsgId {
      get { return msgId_; }
      set {
        msgId_ = value;
      }
    }

    /// <summary>Field number for the "guid" field.</summary>
    public const int GuidFieldNumber = 1;
    private string guid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Guid {
      get { return guid_; }
      set {
        guid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "to" field.</summary>
    public const int ToFieldNumber = 2;
    private global::Net.Proto.Position to_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Net.Proto.Position To {
      get { return to_; }
      set {
        to_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ShipUp_SC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ShipUp_SC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MsgId != other.MsgId) return false;
      if (Guid != other.Guid) return false;
      if (!object.Equals(To, other.To)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MsgId != 0) hash ^= MsgId.GetHashCode();
      if (Guid.Length != 0) hash ^= Guid.GetHashCode();
      if (to_ != null) hash ^= To.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Guid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Guid);
      }
      if (to_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(To);
      }
      if (MsgId != 0) {
        output.WriteRawTag(192, 205, 39);
        output.WriteInt32(MsgId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MsgId != 0) {
        size += 3 + pb::CodedOutputStream.ComputeInt32Size(MsgId);
      }
      if (Guid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Guid);
      }
      if (to_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(To);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ShipUp_SC other) {
      if (other == null) {
        return;
      }
      if (other.MsgId != 0) {
        MsgId = other.MsgId;
      }
      if (other.Guid.Length != 0) {
        Guid = other.Guid;
      }
      if (other.to_ != null) {
        if (to_ == null) {
          To = new global::Net.Proto.Position();
        }
        To.MergeFrom(other.To);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Guid = input.ReadString();
            break;
          }
          case 18: {
            if (to_ == null) {
              To = new global::Net.Proto.Position();
            }
            input.ReadMessage(To);
            break;
          }
          case 648896: {
            MsgId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ShipDown_CS : pb::IMessage<ShipDown_CS> {
    private static readonly pb::MessageParser<ShipDown_CS> _parser = new pb::MessageParser<ShipDown_CS>(() => new ShipDown_CS());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ShipDown_CS> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.Proto.EmulatorReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShipDown_CS() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShipDown_CS(ShipDown_CS other) : this() {
      msgId_ = other.msgId_;
      guid_ = other.guid_;
      from_ = other.from_ != null ? other.from_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShipDown_CS Clone() {
      return new ShipDown_CS(this);
    }

    /// <summary>Field number for the "msg_id" field.</summary>
    public const int MsgIdFieldNumber = 81113;
    private int msgId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MsgId {
      get { return msgId_; }
      set {
        msgId_ = value;
      }
    }

    /// <summary>Field number for the "guid" field.</summary>
    public const int GuidFieldNumber = 1;
    private string guid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Guid {
      get { return guid_; }
      set {
        guid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "from" field.</summary>
    public const int FromFieldNumber = 2;
    private global::Net.Proto.Position from_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Net.Proto.Position From {
      get { return from_; }
      set {
        from_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ShipDown_CS);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ShipDown_CS other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MsgId != other.MsgId) return false;
      if (Guid != other.Guid) return false;
      if (!object.Equals(From, other.From)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MsgId != 0) hash ^= MsgId.GetHashCode();
      if (Guid.Length != 0) hash ^= Guid.GetHashCode();
      if (from_ != null) hash ^= From.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Guid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Guid);
      }
      if (from_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(From);
      }
      if (MsgId != 0) {
        output.WriteRawTag(200, 205, 39);
        output.WriteInt32(MsgId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MsgId != 0) {
        size += 3 + pb::CodedOutputStream.ComputeInt32Size(MsgId);
      }
      if (Guid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Guid);
      }
      if (from_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(From);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ShipDown_CS other) {
      if (other == null) {
        return;
      }
      if (other.MsgId != 0) {
        MsgId = other.MsgId;
      }
      if (other.Guid.Length != 0) {
        Guid = other.Guid;
      }
      if (other.from_ != null) {
        if (from_ == null) {
          From = new global::Net.Proto.Position();
        }
        From.MergeFrom(other.From);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Guid = input.ReadString();
            break;
          }
          case 18: {
            if (from_ == null) {
              From = new global::Net.Proto.Position();
            }
            input.ReadMessage(From);
            break;
          }
          case 648904: {
            MsgId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ShipDown_SC : pb::IMessage<ShipDown_SC> {
    private static readonly pb::MessageParser<ShipDown_SC> _parser = new pb::MessageParser<ShipDown_SC>(() => new ShipDown_SC());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ShipDown_SC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.Proto.EmulatorReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShipDown_SC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShipDown_SC(ShipDown_SC other) : this() {
      msgId_ = other.msgId_;
      guid_ = other.guid_;
      from_ = other.from_ != null ? other.from_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShipDown_SC Clone() {
      return new ShipDown_SC(this);
    }

    /// <summary>Field number for the "msg_id" field.</summary>
    public const int MsgIdFieldNumber = 81114;
    private int msgId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MsgId {
      get { return msgId_; }
      set {
        msgId_ = value;
      }
    }

    /// <summary>Field number for the "guid" field.</summary>
    public const int GuidFieldNumber = 1;
    private string guid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Guid {
      get { return guid_; }
      set {
        guid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "from" field.</summary>
    public const int FromFieldNumber = 2;
    private global::Net.Proto.Position from_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Net.Proto.Position From {
      get { return from_; }
      set {
        from_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ShipDown_SC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ShipDown_SC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MsgId != other.MsgId) return false;
      if (Guid != other.Guid) return false;
      if (!object.Equals(From, other.From)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MsgId != 0) hash ^= MsgId.GetHashCode();
      if (Guid.Length != 0) hash ^= Guid.GetHashCode();
      if (from_ != null) hash ^= From.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Guid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Guid);
      }
      if (from_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(From);
      }
      if (MsgId != 0) {
        output.WriteRawTag(208, 205, 39);
        output.WriteInt32(MsgId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MsgId != 0) {
        size += 3 + pb::CodedOutputStream.ComputeInt32Size(MsgId);
      }
      if (Guid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Guid);
      }
      if (from_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(From);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ShipDown_SC other) {
      if (other == null) {
        return;
      }
      if (other.MsgId != 0) {
        MsgId = other.MsgId;
      }
      if (other.Guid.Length != 0) {
        Guid = other.Guid;
      }
      if (other.from_ != null) {
        if (from_ == null) {
          From = new global::Net.Proto.Position();
        }
        From.MergeFrom(other.From);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Guid = input.ReadString();
            break;
          }
          case 18: {
            if (from_ == null) {
              From = new global::Net.Proto.Position();
            }
            input.ReadMessage(From);
            break;
          }
          case 648912: {
            MsgId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PrepareEnd_CS : pb::IMessage<PrepareEnd_CS> {
    private static readonly pb::MessageParser<PrepareEnd_CS> _parser = new pb::MessageParser<PrepareEnd_CS>(() => new PrepareEnd_CS());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PrepareEnd_CS> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.Proto.EmulatorReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PrepareEnd_CS() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PrepareEnd_CS(PrepareEnd_CS other) : this() {
      msgId_ = other.msgId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PrepareEnd_CS Clone() {
      return new PrepareEnd_CS(this);
    }

    /// <summary>Field number for the "msg_id" field.</summary>
    public const int MsgIdFieldNumber = 82001;
    private int msgId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MsgId {
      get { return msgId_; }
      set {
        msgId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PrepareEnd_CS);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PrepareEnd_CS other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MsgId != other.MsgId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MsgId != 0) hash ^= MsgId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MsgId != 0) {
        output.WriteRawTag(136, 133, 40);
        output.WriteInt32(MsgId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MsgId != 0) {
        size += 3 + pb::CodedOutputStream.ComputeInt32Size(MsgId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PrepareEnd_CS other) {
      if (other == null) {
        return;
      }
      if (other.MsgId != 0) {
        MsgId = other.MsgId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 656008: {
            MsgId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PrepareInfo_SC : pb::IMessage<PrepareInfo_SC> {
    private static readonly pb::MessageParser<PrepareInfo_SC> _parser = new pb::MessageParser<PrepareInfo_SC>(() => new PrepareInfo_SC());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PrepareInfo_SC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.Proto.EmulatorReflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PrepareInfo_SC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PrepareInfo_SC(PrepareInfo_SC other) : this() {
      msgId_ = other.msgId_;
      prepareInfo_ = other.prepareInfo_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PrepareInfo_SC Clone() {
      return new PrepareInfo_SC(this);
    }

    /// <summary>Field number for the "msg_id" field.</summary>
    public const int MsgIdFieldNumber = 82002;
    private int msgId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MsgId {
      get { return msgId_; }
      set {
        msgId_ = value;
      }
    }

    /// <summary>Field number for the "prepareInfo" field.</summary>
    public const int PrepareInfoFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Net.Proto.PrepareInfo> _repeated_prepareInfo_codec
        = pb::FieldCodec.ForMessage(10, global::Net.Proto.PrepareInfo.Parser);
    private readonly pbc::RepeatedField<global::Net.Proto.PrepareInfo> prepareInfo_ = new pbc::RepeatedField<global::Net.Proto.PrepareInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Net.Proto.PrepareInfo> PrepareInfo {
      get { return prepareInfo_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PrepareInfo_SC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PrepareInfo_SC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MsgId != other.MsgId) return false;
      if(!prepareInfo_.Equals(other.prepareInfo_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MsgId != 0) hash ^= MsgId.GetHashCode();
      hash ^= prepareInfo_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      prepareInfo_.WriteTo(output, _repeated_prepareInfo_codec);
      if (MsgId != 0) {
        output.WriteRawTag(144, 133, 40);
        output.WriteInt32(MsgId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MsgId != 0) {
        size += 3 + pb::CodedOutputStream.ComputeInt32Size(MsgId);
      }
      size += prepareInfo_.CalculateSize(_repeated_prepareInfo_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PrepareInfo_SC other) {
      if (other == null) {
        return;
      }
      if (other.MsgId != 0) {
        MsgId = other.MsgId;
      }
      prepareInfo_.Add(other.prepareInfo_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            prepareInfo_.AddEntriesFrom(input, _repeated_prepareInfo_codec);
            break;
          }
          case 656016: {
            MsgId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PrepareInfo : pb::IMessage<PrepareInfo> {
    private static readonly pb::MessageParser<PrepareInfo> _parser = new pb::MessageParser<PrepareInfo>(() => new PrepareInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PrepareInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.Proto.EmulatorReflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PrepareInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PrepareInfo(PrepareInfo other) : this() {
      account_ = other.account_;
      ok_ = other.ok_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PrepareInfo Clone() {
      return new PrepareInfo(this);
    }

    /// <summary>Field number for the "account" field.</summary>
    public const int AccountFieldNumber = 1;
    private string account_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Account {
      get { return account_; }
      set {
        account_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ok" field.</summary>
    public const int OkFieldNumber = 2;
    private bool ok_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Ok {
      get { return ok_; }
      set {
        ok_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PrepareInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PrepareInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Account != other.Account) return false;
      if (Ok != other.Ok) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Account.Length != 0) hash ^= Account.GetHashCode();
      if (Ok != false) hash ^= Ok.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Account.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Account);
      }
      if (Ok != false) {
        output.WriteRawTag(16);
        output.WriteBool(Ok);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Account.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Account);
      }
      if (Ok != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PrepareInfo other) {
      if (other == null) {
        return;
      }
      if (other.Account.Length != 0) {
        Account = other.Account;
      }
      if (other.Ok != false) {
        Ok = other.Ok;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Account = input.ReadString();
            break;
          }
          case 16: {
            Ok = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ShipMove_CS : pb::IMessage<ShipMove_CS> {
    private static readonly pb::MessageParser<ShipMove_CS> _parser = new pb::MessageParser<ShipMove_CS>(() => new ShipMove_CS());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ShipMove_CS> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.Proto.EmulatorReflection.Descriptor.MessageTypes[30]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShipMove_CS() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShipMove_CS(ShipMove_CS other) : this() {
      msgId_ = other.msgId_;
      guid_ = other.guid_;
      to_ = other.to_ != null ? other.to_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShipMove_CS Clone() {
      return new ShipMove_CS(this);
    }

    /// <summary>Field number for the "msg_id" field.</summary>
    public const int MsgIdFieldNumber = 82003;
    private int msgId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MsgId {
      get { return msgId_; }
      set {
        msgId_ = value;
      }
    }

    /// <summary>Field number for the "guid" field.</summary>
    public const int GuidFieldNumber = 1;
    private string guid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Guid {
      get { return guid_; }
      set {
        guid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "to" field.</summary>
    public const int ToFieldNumber = 2;
    private global::Net.Proto.Position to_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Net.Proto.Position To {
      get { return to_; }
      set {
        to_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ShipMove_CS);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ShipMove_CS other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MsgId != other.MsgId) return false;
      if (Guid != other.Guid) return false;
      if (!object.Equals(To, other.To)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MsgId != 0) hash ^= MsgId.GetHashCode();
      if (Guid.Length != 0) hash ^= Guid.GetHashCode();
      if (to_ != null) hash ^= To.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Guid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Guid);
      }
      if (to_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(To);
      }
      if (MsgId != 0) {
        output.WriteRawTag(152, 133, 40);
        output.WriteInt32(MsgId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MsgId != 0) {
        size += 3 + pb::CodedOutputStream.ComputeInt32Size(MsgId);
      }
      if (Guid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Guid);
      }
      if (to_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(To);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ShipMove_CS other) {
      if (other == null) {
        return;
      }
      if (other.MsgId != 0) {
        MsgId = other.MsgId;
      }
      if (other.Guid.Length != 0) {
        Guid = other.Guid;
      }
      if (other.to_ != null) {
        if (to_ == null) {
          To = new global::Net.Proto.Position();
        }
        To.MergeFrom(other.To);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Guid = input.ReadString();
            break;
          }
          case 18: {
            if (to_ == null) {
              To = new global::Net.Proto.Position();
            }
            input.ReadMessage(To);
            break;
          }
          case 656024: {
            MsgId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ShipMove_SC : pb::IMessage<ShipMove_SC> {
    private static readonly pb::MessageParser<ShipMove_SC> _parser = new pb::MessageParser<ShipMove_SC>(() => new ShipMove_SC());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ShipMove_SC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.Proto.EmulatorReflection.Descriptor.MessageTypes[31]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShipMove_SC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShipMove_SC(ShipMove_SC other) : this() {
      msgId_ = other.msgId_;
      guid_ = other.guid_;
      to_ = other.to_ != null ? other.to_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShipMove_SC Clone() {
      return new ShipMove_SC(this);
    }

    /// <summary>Field number for the "msg_id" field.</summary>
    public const int MsgIdFieldNumber = 82004;
    private int msgId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MsgId {
      get { return msgId_; }
      set {
        msgId_ = value;
      }
    }

    /// <summary>Field number for the "guid" field.</summary>
    public const int GuidFieldNumber = 1;
    private string guid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Guid {
      get { return guid_; }
      set {
        guid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "to" field.</summary>
    public const int ToFieldNumber = 2;
    private global::Net.Proto.Position to_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Net.Proto.Position To {
      get { return to_; }
      set {
        to_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ShipMove_SC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ShipMove_SC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MsgId != other.MsgId) return false;
      if (Guid != other.Guid) return false;
      if (!object.Equals(To, other.To)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MsgId != 0) hash ^= MsgId.GetHashCode();
      if (Guid.Length != 0) hash ^= Guid.GetHashCode();
      if (to_ != null) hash ^= To.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Guid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Guid);
      }
      if (to_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(To);
      }
      if (MsgId != 0) {
        output.WriteRawTag(160, 133, 40);
        output.WriteInt32(MsgId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MsgId != 0) {
        size += 3 + pb::CodedOutputStream.ComputeInt32Size(MsgId);
      }
      if (Guid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Guid);
      }
      if (to_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(To);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ShipMove_SC other) {
      if (other == null) {
        return;
      }
      if (other.MsgId != 0) {
        MsgId = other.MsgId;
      }
      if (other.Guid.Length != 0) {
        Guid = other.Guid;
      }
      if (other.to_ != null) {
        if (to_ == null) {
          To = new global::Net.Proto.Position();
        }
        To.MergeFrom(other.To);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Guid = input.ReadString();
            break;
          }
          case 18: {
            if (to_ == null) {
              To = new global::Net.Proto.Position();
            }
            input.ReadMessage(To);
            break;
          }
          case 656032: {
            MsgId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class BattleStart_SC : pb::IMessage<BattleStart_SC> {
    private static readonly pb::MessageParser<BattleStart_SC> _parser = new pb::MessageParser<BattleStart_SC>(() => new BattleStart_SC());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BattleStart_SC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.Proto.EmulatorReflection.Descriptor.MessageTypes[32]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BattleStart_SC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BattleStart_SC(BattleStart_SC other) : this() {
      msgId_ = other.msgId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BattleStart_SC Clone() {
      return new BattleStart_SC(this);
    }

    /// <summary>Field number for the "msg_id" field.</summary>
    public const int MsgIdFieldNumber = 82005;
    private int msgId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MsgId {
      get { return msgId_; }
      set {
        msgId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BattleStart_SC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BattleStart_SC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MsgId != other.MsgId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MsgId != 0) hash ^= MsgId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MsgId != 0) {
        output.WriteRawTag(168, 133, 40);
        output.WriteInt32(MsgId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MsgId != 0) {
        size += 3 + pb::CodedOutputStream.ComputeInt32Size(MsgId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BattleStart_SC other) {
      if (other == null) {
        return;
      }
      if (other.MsgId != 0) {
        MsgId = other.MsgId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 656040: {
            MsgId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class NormalAttack_CS : pb::IMessage<NormalAttack_CS> {
    private static readonly pb::MessageParser<NormalAttack_CS> _parser = new pb::MessageParser<NormalAttack_CS>(() => new NormalAttack_CS());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NormalAttack_CS> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.Proto.EmulatorReflection.Descriptor.MessageTypes[33]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NormalAttack_CS() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NormalAttack_CS(NormalAttack_CS other) : this() {
      msgId_ = other.msgId_;
      attackGuid_ = other.attackGuid_;
      targetGuid_ = other.targetGuid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NormalAttack_CS Clone() {
      return new NormalAttack_CS(this);
    }

    /// <summary>Field number for the "msg_id" field.</summary>
    public const int MsgIdFieldNumber = 82006;
    private int msgId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MsgId {
      get { return msgId_; }
      set {
        msgId_ = value;
      }
    }

    /// <summary>Field number for the "attack_guid" field.</summary>
    public const int AttackGuidFieldNumber = 1;
    private string attackGuid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AttackGuid {
      get { return attackGuid_; }
      set {
        attackGuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "target_guid" field.</summary>
    public const int TargetGuidFieldNumber = 2;
    private string targetGuid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TargetGuid {
      get { return targetGuid_; }
      set {
        targetGuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NormalAttack_CS);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NormalAttack_CS other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MsgId != other.MsgId) return false;
      if (AttackGuid != other.AttackGuid) return false;
      if (TargetGuid != other.TargetGuid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MsgId != 0) hash ^= MsgId.GetHashCode();
      if (AttackGuid.Length != 0) hash ^= AttackGuid.GetHashCode();
      if (TargetGuid.Length != 0) hash ^= TargetGuid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AttackGuid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AttackGuid);
      }
      if (TargetGuid.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(TargetGuid);
      }
      if (MsgId != 0) {
        output.WriteRawTag(176, 133, 40);
        output.WriteInt32(MsgId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MsgId != 0) {
        size += 3 + pb::CodedOutputStream.ComputeInt32Size(MsgId);
      }
      if (AttackGuid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AttackGuid);
      }
      if (TargetGuid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TargetGuid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NormalAttack_CS other) {
      if (other == null) {
        return;
      }
      if (other.MsgId != 0) {
        MsgId = other.MsgId;
      }
      if (other.AttackGuid.Length != 0) {
        AttackGuid = other.AttackGuid;
      }
      if (other.TargetGuid.Length != 0) {
        TargetGuid = other.TargetGuid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AttackGuid = input.ReadString();
            break;
          }
          case 18: {
            TargetGuid = input.ReadString();
            break;
          }
          case 656048: {
            MsgId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SkillAttack_CS : pb::IMessage<SkillAttack_CS> {
    private static readonly pb::MessageParser<SkillAttack_CS> _parser = new pb::MessageParser<SkillAttack_CS>(() => new SkillAttack_CS());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SkillAttack_CS> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.Proto.EmulatorReflection.Descriptor.MessageTypes[34]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SkillAttack_CS() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SkillAttack_CS(SkillAttack_CS other) : this() {
      msgId_ = other.msgId_;
      attackGuid_ = other.attackGuid_;
      targetGuid_ = other.targetGuid_;
      skillGuid_ = other.skillGuid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SkillAttack_CS Clone() {
      return new SkillAttack_CS(this);
    }

    /// <summary>Field number for the "msg_id" field.</summary>
    public const int MsgIdFieldNumber = 82007;
    private int msgId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MsgId {
      get { return msgId_; }
      set {
        msgId_ = value;
      }
    }

    /// <summary>Field number for the "attack_guid" field.</summary>
    public const int AttackGuidFieldNumber = 1;
    private string attackGuid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AttackGuid {
      get { return attackGuid_; }
      set {
        attackGuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "target_guid" field.</summary>
    public const int TargetGuidFieldNumber = 2;
    private string targetGuid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TargetGuid {
      get { return targetGuid_; }
      set {
        targetGuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "skill_guid" field.</summary>
    public const int SkillGuidFieldNumber = 3;
    private string skillGuid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SkillGuid {
      get { return skillGuid_; }
      set {
        skillGuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SkillAttack_CS);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SkillAttack_CS other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MsgId != other.MsgId) return false;
      if (AttackGuid != other.AttackGuid) return false;
      if (TargetGuid != other.TargetGuid) return false;
      if (SkillGuid != other.SkillGuid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MsgId != 0) hash ^= MsgId.GetHashCode();
      if (AttackGuid.Length != 0) hash ^= AttackGuid.GetHashCode();
      if (TargetGuid.Length != 0) hash ^= TargetGuid.GetHashCode();
      if (SkillGuid.Length != 0) hash ^= SkillGuid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AttackGuid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AttackGuid);
      }
      if (TargetGuid.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(TargetGuid);
      }
      if (SkillGuid.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(SkillGuid);
      }
      if (MsgId != 0) {
        output.WriteRawTag(184, 133, 40);
        output.WriteInt32(MsgId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MsgId != 0) {
        size += 3 + pb::CodedOutputStream.ComputeInt32Size(MsgId);
      }
      if (AttackGuid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AttackGuid);
      }
      if (TargetGuid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TargetGuid);
      }
      if (SkillGuid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SkillGuid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SkillAttack_CS other) {
      if (other == null) {
        return;
      }
      if (other.MsgId != 0) {
        MsgId = other.MsgId;
      }
      if (other.AttackGuid.Length != 0) {
        AttackGuid = other.AttackGuid;
      }
      if (other.TargetGuid.Length != 0) {
        TargetGuid = other.TargetGuid;
      }
      if (other.SkillGuid.Length != 0) {
        SkillGuid = other.SkillGuid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AttackGuid = input.ReadString();
            break;
          }
          case 18: {
            TargetGuid = input.ReadString();
            break;
          }
          case 26: {
            SkillGuid = input.ReadString();
            break;
          }
          case 656056: {
            MsgId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SkillResult_SC : pb::IMessage<SkillResult_SC> {
    private static readonly pb::MessageParser<SkillResult_SC> _parser = new pb::MessageParser<SkillResult_SC>(() => new SkillResult_SC());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SkillResult_SC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.Proto.EmulatorReflection.Descriptor.MessageTypes[35]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SkillResult_SC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SkillResult_SC(SkillResult_SC other) : this() {
      msgId_ = other.msgId_;
      result_ = other.result_ != null ? other.result_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SkillResult_SC Clone() {
      return new SkillResult_SC(this);
    }

    /// <summary>Field number for the "msg_id" field.</summary>
    public const int MsgIdFieldNumber = 82008;
    private int msgId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MsgId {
      get { return msgId_; }
      set {
        msgId_ = value;
      }
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private global::Net.Proto.SkillResult result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Net.Proto.SkillResult Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SkillResult_SC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SkillResult_SC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MsgId != other.MsgId) return false;
      if (!object.Equals(Result, other.Result)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MsgId != 0) hash ^= MsgId.GetHashCode();
      if (result_ != null) hash ^= Result.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (result_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Result);
      }
      if (MsgId != 0) {
        output.WriteRawTag(192, 133, 40);
        output.WriteInt32(MsgId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MsgId != 0) {
        size += 3 + pb::CodedOutputStream.ComputeInt32Size(MsgId);
      }
      if (result_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Result);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SkillResult_SC other) {
      if (other == null) {
        return;
      }
      if (other.MsgId != 0) {
        MsgId = other.MsgId;
      }
      if (other.result_ != null) {
        if (result_ == null) {
          Result = new global::Net.Proto.SkillResult();
        }
        Result.MergeFrom(other.Result);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (result_ == null) {
              Result = new global::Net.Proto.SkillResult();
            }
            input.ReadMessage(Result);
            break;
          }
          case 656064: {
            MsgId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SkillResult : pb::IMessage<SkillResult> {
    private static readonly pb::MessageParser<SkillResult> _parser = new pb::MessageParser<SkillResult>(() => new SkillResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SkillResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.Proto.EmulatorReflection.Descriptor.MessageTypes[36]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SkillResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SkillResult(SkillResult other) : this() {
      attackGuid_ = other.attackGuid_;
      targetGuid_ = other.targetGuid_;
      skillGuid_ = other.skillGuid_;
      skillDamageList_ = other.skillDamageList_.Clone();
      skillHealList_ = other.skillHealList_.Clone();
      skillAddBuffList_ = other.skillAddBuffList_.Clone();
      skillRemoveBuffList_ = other.skillRemoveBuffList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SkillResult Clone() {
      return new SkillResult(this);
    }

    /// <summary>Field number for the "attack_guid" field.</summary>
    public const int AttackGuidFieldNumber = 1;
    private string attackGuid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AttackGuid {
      get { return attackGuid_; }
      set {
        attackGuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "target_guid" field.</summary>
    public const int TargetGuidFieldNumber = 2;
    private string targetGuid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TargetGuid {
      get { return targetGuid_; }
      set {
        targetGuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "skill_guid" field.</summary>
    public const int SkillGuidFieldNumber = 3;
    private string skillGuid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SkillGuid {
      get { return skillGuid_; }
      set {
        skillGuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "skillDamageList" field.</summary>
    public const int SkillDamageListFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Net.Proto.SkillDamage> _repeated_skillDamageList_codec
        = pb::FieldCodec.ForMessage(34, global::Net.Proto.SkillDamage.Parser);
    private readonly pbc::RepeatedField<global::Net.Proto.SkillDamage> skillDamageList_ = new pbc::RepeatedField<global::Net.Proto.SkillDamage>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Net.Proto.SkillDamage> SkillDamageList {
      get { return skillDamageList_; }
    }

    /// <summary>Field number for the "skillHealList" field.</summary>
    public const int SkillHealListFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Net.Proto.SkillHeal> _repeated_skillHealList_codec
        = pb::FieldCodec.ForMessage(42, global::Net.Proto.SkillHeal.Parser);
    private readonly pbc::RepeatedField<global::Net.Proto.SkillHeal> skillHealList_ = new pbc::RepeatedField<global::Net.Proto.SkillHeal>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Net.Proto.SkillHeal> SkillHealList {
      get { return skillHealList_; }
    }

    /// <summary>Field number for the "skillAddBuffList" field.</summary>
    public const int SkillAddBuffListFieldNumber = 6;
    private static readonly pb::FieldCodec<global::Net.Proto.SkillAddBuff> _repeated_skillAddBuffList_codec
        = pb::FieldCodec.ForMessage(50, global::Net.Proto.SkillAddBuff.Parser);
    private readonly pbc::RepeatedField<global::Net.Proto.SkillAddBuff> skillAddBuffList_ = new pbc::RepeatedField<global::Net.Proto.SkillAddBuff>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Net.Proto.SkillAddBuff> SkillAddBuffList {
      get { return skillAddBuffList_; }
    }

    /// <summary>Field number for the "skillRemoveBuffList" field.</summary>
    public const int SkillRemoveBuffListFieldNumber = 7;
    private static readonly pb::FieldCodec<global::Net.Proto.SkillRemoveBuff> _repeated_skillRemoveBuffList_codec
        = pb::FieldCodec.ForMessage(58, global::Net.Proto.SkillRemoveBuff.Parser);
    private readonly pbc::RepeatedField<global::Net.Proto.SkillRemoveBuff> skillRemoveBuffList_ = new pbc::RepeatedField<global::Net.Proto.SkillRemoveBuff>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Net.Proto.SkillRemoveBuff> SkillRemoveBuffList {
      get { return skillRemoveBuffList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SkillResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SkillResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AttackGuid != other.AttackGuid) return false;
      if (TargetGuid != other.TargetGuid) return false;
      if (SkillGuid != other.SkillGuid) return false;
      if(!skillDamageList_.Equals(other.skillDamageList_)) return false;
      if(!skillHealList_.Equals(other.skillHealList_)) return false;
      if(!skillAddBuffList_.Equals(other.skillAddBuffList_)) return false;
      if(!skillRemoveBuffList_.Equals(other.skillRemoveBuffList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AttackGuid.Length != 0) hash ^= AttackGuid.GetHashCode();
      if (TargetGuid.Length != 0) hash ^= TargetGuid.GetHashCode();
      if (SkillGuid.Length != 0) hash ^= SkillGuid.GetHashCode();
      hash ^= skillDamageList_.GetHashCode();
      hash ^= skillHealList_.GetHashCode();
      hash ^= skillAddBuffList_.GetHashCode();
      hash ^= skillRemoveBuffList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AttackGuid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AttackGuid);
      }
      if (TargetGuid.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(TargetGuid);
      }
      if (SkillGuid.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(SkillGuid);
      }
      skillDamageList_.WriteTo(output, _repeated_skillDamageList_codec);
      skillHealList_.WriteTo(output, _repeated_skillHealList_codec);
      skillAddBuffList_.WriteTo(output, _repeated_skillAddBuffList_codec);
      skillRemoveBuffList_.WriteTo(output, _repeated_skillRemoveBuffList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AttackGuid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AttackGuid);
      }
      if (TargetGuid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TargetGuid);
      }
      if (SkillGuid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SkillGuid);
      }
      size += skillDamageList_.CalculateSize(_repeated_skillDamageList_codec);
      size += skillHealList_.CalculateSize(_repeated_skillHealList_codec);
      size += skillAddBuffList_.CalculateSize(_repeated_skillAddBuffList_codec);
      size += skillRemoveBuffList_.CalculateSize(_repeated_skillRemoveBuffList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SkillResult other) {
      if (other == null) {
        return;
      }
      if (other.AttackGuid.Length != 0) {
        AttackGuid = other.AttackGuid;
      }
      if (other.TargetGuid.Length != 0) {
        TargetGuid = other.TargetGuid;
      }
      if (other.SkillGuid.Length != 0) {
        SkillGuid = other.SkillGuid;
      }
      skillDamageList_.Add(other.skillDamageList_);
      skillHealList_.Add(other.skillHealList_);
      skillAddBuffList_.Add(other.skillAddBuffList_);
      skillRemoveBuffList_.Add(other.skillRemoveBuffList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AttackGuid = input.ReadString();
            break;
          }
          case 18: {
            TargetGuid = input.ReadString();
            break;
          }
          case 26: {
            SkillGuid = input.ReadString();
            break;
          }
          case 34: {
            skillDamageList_.AddEntriesFrom(input, _repeated_skillDamageList_codec);
            break;
          }
          case 42: {
            skillHealList_.AddEntriesFrom(input, _repeated_skillHealList_codec);
            break;
          }
          case 50: {
            skillAddBuffList_.AddEntriesFrom(input, _repeated_skillAddBuffList_codec);
            break;
          }
          case 58: {
            skillRemoveBuffList_.AddEntriesFrom(input, _repeated_skillRemoveBuffList_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SkillDamage : pb::IMessage<SkillDamage> {
    private static readonly pb::MessageParser<SkillDamage> _parser = new pb::MessageParser<SkillDamage>(() => new SkillDamage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SkillDamage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.Proto.EmulatorReflection.Descriptor.MessageTypes[37]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SkillDamage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SkillDamage(SkillDamage other) : this() {
      targetGuid_ = other.targetGuid_;
      damage_ = other.damage_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SkillDamage Clone() {
      return new SkillDamage(this);
    }

    /// <summary>Field number for the "target_guid" field.</summary>
    public const int TargetGuidFieldNumber = 1;
    private string targetGuid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TargetGuid {
      get { return targetGuid_; }
      set {
        targetGuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "damage" field.</summary>
    public const int DamageFieldNumber = 2;
    private int damage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Damage {
      get { return damage_; }
      set {
        damage_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SkillDamage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SkillDamage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TargetGuid != other.TargetGuid) return false;
      if (Damage != other.Damage) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TargetGuid.Length != 0) hash ^= TargetGuid.GetHashCode();
      if (Damage != 0) hash ^= Damage.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TargetGuid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TargetGuid);
      }
      if (Damage != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Damage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TargetGuid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TargetGuid);
      }
      if (Damage != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Damage);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SkillDamage other) {
      if (other == null) {
        return;
      }
      if (other.TargetGuid.Length != 0) {
        TargetGuid = other.TargetGuid;
      }
      if (other.Damage != 0) {
        Damage = other.Damage;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TargetGuid = input.ReadString();
            break;
          }
          case 16: {
            Damage = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SkillHeal : pb::IMessage<SkillHeal> {
    private static readonly pb::MessageParser<SkillHeal> _parser = new pb::MessageParser<SkillHeal>(() => new SkillHeal());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SkillHeal> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.Proto.EmulatorReflection.Descriptor.MessageTypes[38]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SkillHeal() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SkillHeal(SkillHeal other) : this() {
      targetGuid_ = other.targetGuid_;
      heal_ = other.heal_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SkillHeal Clone() {
      return new SkillHeal(this);
    }

    /// <summary>Field number for the "target_guid" field.</summary>
    public const int TargetGuidFieldNumber = 1;
    private string targetGuid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TargetGuid {
      get { return targetGuid_; }
      set {
        targetGuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "heal" field.</summary>
    public const int HealFieldNumber = 3;
    private int heal_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Heal {
      get { return heal_; }
      set {
        heal_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SkillHeal);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SkillHeal other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TargetGuid != other.TargetGuid) return false;
      if (Heal != other.Heal) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TargetGuid.Length != 0) hash ^= TargetGuid.GetHashCode();
      if (Heal != 0) hash ^= Heal.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TargetGuid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TargetGuid);
      }
      if (Heal != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Heal);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TargetGuid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TargetGuid);
      }
      if (Heal != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Heal);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SkillHeal other) {
      if (other == null) {
        return;
      }
      if (other.TargetGuid.Length != 0) {
        TargetGuid = other.TargetGuid;
      }
      if (other.Heal != 0) {
        Heal = other.Heal;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TargetGuid = input.ReadString();
            break;
          }
          case 24: {
            Heal = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SkillAddBuff : pb::IMessage<SkillAddBuff> {
    private static readonly pb::MessageParser<SkillAddBuff> _parser = new pb::MessageParser<SkillAddBuff>(() => new SkillAddBuff());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SkillAddBuff> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.Proto.EmulatorReflection.Descriptor.MessageTypes[39]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SkillAddBuff() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SkillAddBuff(SkillAddBuff other) : this() {
      buff_ = other.buff_ != null ? other.buff_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SkillAddBuff Clone() {
      return new SkillAddBuff(this);
    }

    /// <summary>Field number for the "buff" field.</summary>
    public const int BuffFieldNumber = 1;
    private global::Net.Proto.Buff buff_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Net.Proto.Buff Buff {
      get { return buff_; }
      set {
        buff_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SkillAddBuff);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SkillAddBuff other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Buff, other.Buff)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (buff_ != null) hash ^= Buff.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (buff_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Buff);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (buff_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Buff);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SkillAddBuff other) {
      if (other == null) {
        return;
      }
      if (other.buff_ != null) {
        if (buff_ == null) {
          Buff = new global::Net.Proto.Buff();
        }
        Buff.MergeFrom(other.Buff);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (buff_ == null) {
              Buff = new global::Net.Proto.Buff();
            }
            input.ReadMessage(Buff);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SkillRemoveBuff : pb::IMessage<SkillRemoveBuff> {
    private static readonly pb::MessageParser<SkillRemoveBuff> _parser = new pb::MessageParser<SkillRemoveBuff>(() => new SkillRemoveBuff());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SkillRemoveBuff> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.Proto.EmulatorReflection.Descriptor.MessageTypes[40]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SkillRemoveBuff() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SkillRemoveBuff(SkillRemoveBuff other) : this() {
      buff_ = other.buff_ != null ? other.buff_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SkillRemoveBuff Clone() {
      return new SkillRemoveBuff(this);
    }

    /// <summary>Field number for the "buff" field.</summary>
    public const int BuffFieldNumber = 1;
    private global::Net.Proto.Buff buff_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Net.Proto.Buff Buff {
      get { return buff_; }
      set {
        buff_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SkillRemoveBuff);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SkillRemoveBuff other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Buff, other.Buff)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (buff_ != null) hash ^= Buff.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (buff_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Buff);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (buff_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Buff);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SkillRemoveBuff other) {
      if (other == null) {
        return;
      }
      if (other.buff_ != null) {
        if (buff_ == null) {
          Buff = new global::Net.Proto.Buff();
        }
        Buff.MergeFrom(other.Buff);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (buff_ == null) {
              Buff = new global::Net.Proto.Buff();
            }
            input.ReadMessage(Buff);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///回合数推送
  /// </summary>
  public sealed partial class Round_SC : pb::IMessage<Round_SC> {
    private static readonly pb::MessageParser<Round_SC> _parser = new pb::MessageParser<Round_SC>(() => new Round_SC());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Round_SC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.Proto.EmulatorReflection.Descriptor.MessageTypes[41]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Round_SC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Round_SC(Round_SC other) : this() {
      msgId_ = other.msgId_;
      round_ = other.round_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Round_SC Clone() {
      return new Round_SC(this);
    }

    /// <summary>Field number for the "msg_id" field.</summary>
    public const int MsgIdFieldNumber = 82009;
    private int msgId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MsgId {
      get { return msgId_; }
      set {
        msgId_ = value;
      }
    }

    /// <summary>Field number for the "round" field.</summary>
    public const int RoundFieldNumber = 1;
    private int round_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Round {
      get { return round_; }
      set {
        round_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Round_SC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Round_SC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MsgId != other.MsgId) return false;
      if (Round != other.Round) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MsgId != 0) hash ^= MsgId.GetHashCode();
      if (Round != 0) hash ^= Round.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Round != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Round);
      }
      if (MsgId != 0) {
        output.WriteRawTag(200, 133, 40);
        output.WriteInt32(MsgId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MsgId != 0) {
        size += 3 + pb::CodedOutputStream.ComputeInt32Size(MsgId);
      }
      if (Round != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Round);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Round_SC other) {
      if (other == null) {
        return;
      }
      if (other.MsgId != 0) {
        MsgId = other.MsgId;
      }
      if (other.Round != 0) {
        Round = other.Round;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Round = input.ReadInt32();
            break;
          }
          case 656072: {
            MsgId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///行动开始
  /// </summary>
  public sealed partial class ActionStart_SC : pb::IMessage<ActionStart_SC> {
    private static readonly pb::MessageParser<ActionStart_SC> _parser = new pb::MessageParser<ActionStart_SC>(() => new ActionStart_SC());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ActionStart_SC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.Proto.EmulatorReflection.Descriptor.MessageTypes[42]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActionStart_SC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActionStart_SC(ActionStart_SC other) : this() {
      msgId_ = other.msgId_;
      account_ = other.account_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActionStart_SC Clone() {
      return new ActionStart_SC(this);
    }

    /// <summary>Field number for the "msg_id" field.</summary>
    public const int MsgIdFieldNumber = 82010;
    private int msgId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MsgId {
      get { return msgId_; }
      set {
        msgId_ = value;
      }
    }

    /// <summary>Field number for the "account" field.</summary>
    public const int AccountFieldNumber = 1;
    private string account_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Account {
      get { return account_; }
      set {
        account_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ActionStart_SC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ActionStart_SC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MsgId != other.MsgId) return false;
      if (Account != other.Account) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MsgId != 0) hash ^= MsgId.GetHashCode();
      if (Account.Length != 0) hash ^= Account.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Account.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Account);
      }
      if (MsgId != 0) {
        output.WriteRawTag(208, 133, 40);
        output.WriteInt32(MsgId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MsgId != 0) {
        size += 3 + pb::CodedOutputStream.ComputeInt32Size(MsgId);
      }
      if (Account.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Account);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ActionStart_SC other) {
      if (other == null) {
        return;
      }
      if (other.MsgId != 0) {
        MsgId = other.MsgId;
      }
      if (other.Account.Length != 0) {
        Account = other.Account;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Account = input.ReadString();
            break;
          }
          case 656080: {
            MsgId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///待机
  /// </summary>
  public sealed partial class ShipStandby_CS : pb::IMessage<ShipStandby_CS> {
    private static readonly pb::MessageParser<ShipStandby_CS> _parser = new pb::MessageParser<ShipStandby_CS>(() => new ShipStandby_CS());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ShipStandby_CS> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.Proto.EmulatorReflection.Descriptor.MessageTypes[43]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShipStandby_CS() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShipStandby_CS(ShipStandby_CS other) : this() {
      msgId_ = other.msgId_;
      guid_ = other.guid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShipStandby_CS Clone() {
      return new ShipStandby_CS(this);
    }

    /// <summary>Field number for the "msg_id" field.</summary>
    public const int MsgIdFieldNumber = 82011;
    private int msgId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MsgId {
      get { return msgId_; }
      set {
        msgId_ = value;
      }
    }

    /// <summary>Field number for the "guid" field.</summary>
    public const int GuidFieldNumber = 1;
    private string guid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Guid {
      get { return guid_; }
      set {
        guid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ShipStandby_CS);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ShipStandby_CS other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MsgId != other.MsgId) return false;
      if (Guid != other.Guid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MsgId != 0) hash ^= MsgId.GetHashCode();
      if (Guid.Length != 0) hash ^= Guid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Guid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Guid);
      }
      if (MsgId != 0) {
        output.WriteRawTag(216, 133, 40);
        output.WriteInt32(MsgId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MsgId != 0) {
        size += 3 + pb::CodedOutputStream.ComputeInt32Size(MsgId);
      }
      if (Guid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Guid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ShipStandby_CS other) {
      if (other == null) {
        return;
      }
      if (other.MsgId != 0) {
        MsgId = other.MsgId;
      }
      if (other.Guid.Length != 0) {
        Guid = other.Guid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Guid = input.ReadString();
            break;
          }
          case 656088: {
            MsgId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ShipStandby_SC : pb::IMessage<ShipStandby_SC> {
    private static readonly pb::MessageParser<ShipStandby_SC> _parser = new pb::MessageParser<ShipStandby_SC>(() => new ShipStandby_SC());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ShipStandby_SC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.Proto.EmulatorReflection.Descriptor.MessageTypes[44]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShipStandby_SC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShipStandby_SC(ShipStandby_SC other) : this() {
      msgId_ = other.msgId_;
      shipList_ = other.shipList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShipStandby_SC Clone() {
      return new ShipStandby_SC(this);
    }

    /// <summary>Field number for the "msg_id" field.</summary>
    public const int MsgIdFieldNumber = 82012;
    private int msgId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MsgId {
      get { return msgId_; }
      set {
        msgId_ = value;
      }
    }

    /// <summary>Field number for the "shipList" field.</summary>
    public const int ShipListFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_shipList_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> shipList_ = new pbc::RepeatedField<string>();
    /// <summary>
    ///待机船只列表(guid)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> ShipList {
      get { return shipList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ShipStandby_SC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ShipStandby_SC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MsgId != other.MsgId) return false;
      if(!shipList_.Equals(other.shipList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MsgId != 0) hash ^= MsgId.GetHashCode();
      hash ^= shipList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      shipList_.WriteTo(output, _repeated_shipList_codec);
      if (MsgId != 0) {
        output.WriteRawTag(224, 133, 40);
        output.WriteInt32(MsgId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MsgId != 0) {
        size += 3 + pb::CodedOutputStream.ComputeInt32Size(MsgId);
      }
      size += shipList_.CalculateSize(_repeated_shipList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ShipStandby_SC other) {
      if (other == null) {
        return;
      }
      if (other.MsgId != 0) {
        MsgId = other.MsgId;
      }
      shipList_.Add(other.shipList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 18: {
            shipList_.AddEntriesFrom(input, _repeated_shipList_codec);
            break;
          }
          case 656096: {
            MsgId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///本回合 行动结束(所有船只进入待机)
  /// </summary>
  public sealed partial class ActionEnd_CS : pb::IMessage<ActionEnd_CS> {
    private static readonly pb::MessageParser<ActionEnd_CS> _parser = new pb::MessageParser<ActionEnd_CS>(() => new ActionEnd_CS());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ActionEnd_CS> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.Proto.EmulatorReflection.Descriptor.MessageTypes[45]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActionEnd_CS() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActionEnd_CS(ActionEnd_CS other) : this() {
      msgId_ = other.msgId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActionEnd_CS Clone() {
      return new ActionEnd_CS(this);
    }

    /// <summary>Field number for the "msg_id" field.</summary>
    public const int MsgIdFieldNumber = 82013;
    private int msgId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MsgId {
      get { return msgId_; }
      set {
        msgId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ActionEnd_CS);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ActionEnd_CS other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MsgId != other.MsgId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MsgId != 0) hash ^= MsgId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MsgId != 0) {
        output.WriteRawTag(232, 133, 40);
        output.WriteInt32(MsgId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MsgId != 0) {
        size += 3 + pb::CodedOutputStream.ComputeInt32Size(MsgId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ActionEnd_CS other) {
      if (other == null) {
        return;
      }
      if (other.MsgId != 0) {
        MsgId = other.MsgId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 656104: {
            MsgId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///普通攻击结果
  /// </summary>
  public sealed partial class NormalAttackResult_SC : pb::IMessage<NormalAttackResult_SC> {
    private static readonly pb::MessageParser<NormalAttackResult_SC> _parser = new pb::MessageParser<NormalAttackResult_SC>(() => new NormalAttackResult_SC());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NormalAttackResult_SC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.Proto.EmulatorReflection.Descriptor.MessageTypes[46]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NormalAttackResult_SC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NormalAttackResult_SC(NormalAttackResult_SC other) : this() {
      msgId_ = other.msgId_;
      attackGuid_ = other.attackGuid_;
      targetGuid_ = other.targetGuid_;
      damage_ = other.damage_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NormalAttackResult_SC Clone() {
      return new NormalAttackResult_SC(this);
    }

    /// <summary>Field number for the "msg_id" field.</summary>
    public const int MsgIdFieldNumber = 82014;
    private int msgId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MsgId {
      get { return msgId_; }
      set {
        msgId_ = value;
      }
    }

    /// <summary>Field number for the "attack_guid" field.</summary>
    public const int AttackGuidFieldNumber = 1;
    private string attackGuid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AttackGuid {
      get { return attackGuid_; }
      set {
        attackGuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "target_guid" field.</summary>
    public const int TargetGuidFieldNumber = 2;
    private string targetGuid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TargetGuid {
      get { return targetGuid_; }
      set {
        targetGuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "damage" field.</summary>
    public const int DamageFieldNumber = 3;
    private int damage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Damage {
      get { return damage_; }
      set {
        damage_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NormalAttackResult_SC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NormalAttackResult_SC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MsgId != other.MsgId) return false;
      if (AttackGuid != other.AttackGuid) return false;
      if (TargetGuid != other.TargetGuid) return false;
      if (Damage != other.Damage) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MsgId != 0) hash ^= MsgId.GetHashCode();
      if (AttackGuid.Length != 0) hash ^= AttackGuid.GetHashCode();
      if (TargetGuid.Length != 0) hash ^= TargetGuid.GetHashCode();
      if (Damage != 0) hash ^= Damage.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AttackGuid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AttackGuid);
      }
      if (TargetGuid.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(TargetGuid);
      }
      if (Damage != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Damage);
      }
      if (MsgId != 0) {
        output.WriteRawTag(240, 133, 40);
        output.WriteInt32(MsgId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MsgId != 0) {
        size += 3 + pb::CodedOutputStream.ComputeInt32Size(MsgId);
      }
      if (AttackGuid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AttackGuid);
      }
      if (TargetGuid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TargetGuid);
      }
      if (Damage != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Damage);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NormalAttackResult_SC other) {
      if (other == null) {
        return;
      }
      if (other.MsgId != 0) {
        MsgId = other.MsgId;
      }
      if (other.AttackGuid.Length != 0) {
        AttackGuid = other.AttackGuid;
      }
      if (other.TargetGuid.Length != 0) {
        TargetGuid = other.TargetGuid;
      }
      if (other.Damage != 0) {
        Damage = other.Damage;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AttackGuid = input.ReadString();
            break;
          }
          case 18: {
            TargetGuid = input.ReadString();
            break;
          }
          case 24: {
            Damage = input.ReadInt32();
            break;
          }
          case 656112: {
            MsgId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///船只状态刷新
  /// </summary>
  public sealed partial class ShipStatus_SC : pb::IMessage<ShipStatus_SC> {
    private static readonly pb::MessageParser<ShipStatus_SC> _parser = new pb::MessageParser<ShipStatus_SC>(() => new ShipStatus_SC());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ShipStatus_SC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.Proto.EmulatorReflection.Descriptor.MessageTypes[47]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShipStatus_SC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShipStatus_SC(ShipStatus_SC other) : this() {
      msgId_ = other.msgId_;
      ships_ = other.ships_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShipStatus_SC Clone() {
      return new ShipStatus_SC(this);
    }

    /// <summary>Field number for the "msg_id" field.</summary>
    public const int MsgIdFieldNumber = 82015;
    private int msgId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MsgId {
      get { return msgId_; }
      set {
        msgId_ = value;
      }
    }

    /// <summary>Field number for the "ships" field.</summary>
    public const int ShipsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Net.Proto.ShipStatus> _repeated_ships_codec
        = pb::FieldCodec.ForMessage(10, global::Net.Proto.ShipStatus.Parser);
    private readonly pbc::RepeatedField<global::Net.Proto.ShipStatus> ships_ = new pbc::RepeatedField<global::Net.Proto.ShipStatus>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Net.Proto.ShipStatus> Ships {
      get { return ships_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ShipStatus_SC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ShipStatus_SC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MsgId != other.MsgId) return false;
      if(!ships_.Equals(other.ships_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MsgId != 0) hash ^= MsgId.GetHashCode();
      hash ^= ships_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      ships_.WriteTo(output, _repeated_ships_codec);
      if (MsgId != 0) {
        output.WriteRawTag(248, 133, 40);
        output.WriteInt32(MsgId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MsgId != 0) {
        size += 3 + pb::CodedOutputStream.ComputeInt32Size(MsgId);
      }
      size += ships_.CalculateSize(_repeated_ships_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ShipStatus_SC other) {
      if (other == null) {
        return;
      }
      if (other.MsgId != 0) {
        MsgId = other.MsgId;
      }
      ships_.Add(other.ships_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ships_.AddEntriesFrom(input, _repeated_ships_codec);
            break;
          }
          case 656120: {
            MsgId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ShipStatus : pb::IMessage<ShipStatus> {
    private static readonly pb::MessageParser<ShipStatus> _parser = new pb::MessageParser<ShipStatus>(() => new ShipStatus());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ShipStatus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.Proto.EmulatorReflection.Descriptor.MessageTypes[48]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShipStatus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShipStatus(ShipStatus other) : this() {
      guid_ = other.guid_;
      attrs_ = other.attrs_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShipStatus Clone() {
      return new ShipStatus(this);
    }

    /// <summary>Field number for the "guid" field.</summary>
    public const int GuidFieldNumber = 1;
    private string guid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Guid {
      get { return guid_; }
      set {
        guid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "attrs" field.</summary>
    public const int AttrsFieldNumber = 6;
    private static readonly pb::FieldCodec<global::Net.Proto.Attr> _repeated_attrs_codec
        = pb::FieldCodec.ForMessage(50, global::Net.Proto.Attr.Parser);
    private readonly pbc::RepeatedField<global::Net.Proto.Attr> attrs_ = new pbc::RepeatedField<global::Net.Proto.Attr>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Net.Proto.Attr> Attrs {
      get { return attrs_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ShipStatus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ShipStatus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Guid != other.Guid) return false;
      if(!attrs_.Equals(other.attrs_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Guid.Length != 0) hash ^= Guid.GetHashCode();
      hash ^= attrs_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Guid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Guid);
      }
      attrs_.WriteTo(output, _repeated_attrs_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Guid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Guid);
      }
      size += attrs_.CalculateSize(_repeated_attrs_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ShipStatus other) {
      if (other == null) {
        return;
      }
      if (other.Guid.Length != 0) {
        Guid = other.Guid;
      }
      attrs_.Add(other.attrs_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Guid = input.ReadString();
            break;
          }
          case 50: {
            attrs_.AddEntriesFrom(input, _repeated_attrs_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///AI 自动托管
  /// </summary>
  public sealed partial class AIAutomatic_CS : pb::IMessage<AIAutomatic_CS> {
    private static readonly pb::MessageParser<AIAutomatic_CS> _parser = new pb::MessageParser<AIAutomatic_CS>(() => new AIAutomatic_CS());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AIAutomatic_CS> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.Proto.EmulatorReflection.Descriptor.MessageTypes[49]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AIAutomatic_CS() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AIAutomatic_CS(AIAutomatic_CS other) : this() {
      msgId_ = other.msgId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AIAutomatic_CS Clone() {
      return new AIAutomatic_CS(this);
    }

    /// <summary>Field number for the "msg_id" field.</summary>
    public const int MsgIdFieldNumber = 82016;
    private int msgId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MsgId {
      get { return msgId_; }
      set {
        msgId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AIAutomatic_CS);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AIAutomatic_CS other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MsgId != other.MsgId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MsgId != 0) hash ^= MsgId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MsgId != 0) {
        output.WriteRawTag(128, 134, 40);
        output.WriteInt32(MsgId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MsgId != 0) {
        size += 3 + pb::CodedOutputStream.ComputeInt32Size(MsgId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AIAutomatic_CS other) {
      if (other == null) {
        return;
      }
      if (other.MsgId != 0) {
        MsgId = other.MsgId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 656128: {
            MsgId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///船只死亡
  /// </summary>
  public sealed partial class ShipDead_SC : pb::IMessage<ShipDead_SC> {
    private static readonly pb::MessageParser<ShipDead_SC> _parser = new pb::MessageParser<ShipDead_SC>(() => new ShipDead_SC());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ShipDead_SC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.Proto.EmulatorReflection.Descriptor.MessageTypes[50]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShipDead_SC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShipDead_SC(ShipDead_SC other) : this() {
      msgId_ = other.msgId_;
      shipList_ = other.shipList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShipDead_SC Clone() {
      return new ShipDead_SC(this);
    }

    /// <summary>Field number for the "msg_id" field.</summary>
    public const int MsgIdFieldNumber = 82017;
    private int msgId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MsgId {
      get { return msgId_; }
      set {
        msgId_ = value;
      }
    }

    /// <summary>Field number for the "shipList" field.</summary>
    public const int ShipListFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_shipList_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> shipList_ = new pbc::RepeatedField<string>();
    /// <summary>
    ///死亡船只列表(guid)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> ShipList {
      get { return shipList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ShipDead_SC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ShipDead_SC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MsgId != other.MsgId) return false;
      if(!shipList_.Equals(other.shipList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MsgId != 0) hash ^= MsgId.GetHashCode();
      hash ^= shipList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      shipList_.WriteTo(output, _repeated_shipList_codec);
      if (MsgId != 0) {
        output.WriteRawTag(136, 134, 40);
        output.WriteInt32(MsgId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MsgId != 0) {
        size += 3 + pb::CodedOutputStream.ComputeInt32Size(MsgId);
      }
      size += shipList_.CalculateSize(_repeated_shipList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ShipDead_SC other) {
      if (other == null) {
        return;
      }
      if (other.MsgId != 0) {
        MsgId = other.MsgId;
      }
      shipList_.Add(other.shipList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 18: {
            shipList_.AddEntriesFrom(input, _repeated_shipList_codec);
            break;
          }
          case 656136: {
            MsgId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///战斗结束
  /// </summary>
  public sealed partial class BattleOver_SC : pb::IMessage<BattleOver_SC> {
    private static readonly pb::MessageParser<BattleOver_SC> _parser = new pb::MessageParser<BattleOver_SC>(() => new BattleOver_SC());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BattleOver_SC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.Proto.EmulatorReflection.Descriptor.MessageTypes[51]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BattleOver_SC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BattleOver_SC(BattleOver_SC other) : this() {
      msgId_ = other.msgId_;
      winnerAccount_ = other.winnerAccount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BattleOver_SC Clone() {
      return new BattleOver_SC(this);
    }

    /// <summary>Field number for the "msg_id" field.</summary>
    public const int MsgIdFieldNumber = 82018;
    private int msgId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MsgId {
      get { return msgId_; }
      set {
        msgId_ = value;
      }
    }

    /// <summary>Field number for the "winner_account" field.</summary>
    public const int WinnerAccountFieldNumber = 1;
    private string winnerAccount_ = "";
    /// <summary>
    ///胜利者account
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string WinnerAccount {
      get { return winnerAccount_; }
      set {
        winnerAccount_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BattleOver_SC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BattleOver_SC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MsgId != other.MsgId) return false;
      if (WinnerAccount != other.WinnerAccount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MsgId != 0) hash ^= MsgId.GetHashCode();
      if (WinnerAccount.Length != 0) hash ^= WinnerAccount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (WinnerAccount.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(WinnerAccount);
      }
      if (MsgId != 0) {
        output.WriteRawTag(144, 134, 40);
        output.WriteInt32(MsgId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MsgId != 0) {
        size += 3 + pb::CodedOutputStream.ComputeInt32Size(MsgId);
      }
      if (WinnerAccount.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(WinnerAccount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BattleOver_SC other) {
      if (other == null) {
        return;
      }
      if (other.MsgId != 0) {
        MsgId = other.MsgId;
      }
      if (other.WinnerAccount.Length != 0) {
        WinnerAccount = other.WinnerAccount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            WinnerAccount = input.ReadString();
            break;
          }
          case 656144: {
            MsgId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class BuffUpdate_SC : pb::IMessage<BuffUpdate_SC> {
    private static readonly pb::MessageParser<BuffUpdate_SC> _parser = new pb::MessageParser<BuffUpdate_SC>(() => new BuffUpdate_SC());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BuffUpdate_SC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.Proto.EmulatorReflection.Descriptor.MessageTypes[52]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuffUpdate_SC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuffUpdate_SC(BuffUpdate_SC other) : this() {
      msgId_ = other.msgId_;
      buff_ = other.buff_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuffUpdate_SC Clone() {
      return new BuffUpdate_SC(this);
    }

    /// <summary>Field number for the "msg_id" field.</summary>
    public const int MsgIdFieldNumber = 82019;
    private int msgId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MsgId {
      get { return msgId_; }
      set {
        msgId_ = value;
      }
    }

    /// <summary>Field number for the "buff" field.</summary>
    public const int BuffFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Net.Proto.Buff> _repeated_buff_codec
        = pb::FieldCodec.ForMessage(10, global::Net.Proto.Buff.Parser);
    private readonly pbc::RepeatedField<global::Net.Proto.Buff> buff_ = new pbc::RepeatedField<global::Net.Proto.Buff>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Net.Proto.Buff> Buff {
      get { return buff_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BuffUpdate_SC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BuffUpdate_SC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MsgId != other.MsgId) return false;
      if(!buff_.Equals(other.buff_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MsgId != 0) hash ^= MsgId.GetHashCode();
      hash ^= buff_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      buff_.WriteTo(output, _repeated_buff_codec);
      if (MsgId != 0) {
        output.WriteRawTag(152, 134, 40);
        output.WriteInt32(MsgId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MsgId != 0) {
        size += 3 + pb::CodedOutputStream.ComputeInt32Size(MsgId);
      }
      size += buff_.CalculateSize(_repeated_buff_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BuffUpdate_SC other) {
      if (other == null) {
        return;
      }
      if (other.MsgId != 0) {
        MsgId = other.MsgId;
      }
      buff_.Add(other.buff_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            buff_.AddEntriesFrom(input, _repeated_buff_codec);
            break;
          }
          case 656152: {
            MsgId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class BuffRemove_SC : pb::IMessage<BuffRemove_SC> {
    private static readonly pb::MessageParser<BuffRemove_SC> _parser = new pb::MessageParser<BuffRemove_SC>(() => new BuffRemove_SC());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BuffRemove_SC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.Proto.EmulatorReflection.Descriptor.MessageTypes[53]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuffRemove_SC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuffRemove_SC(BuffRemove_SC other) : this() {
      msgId_ = other.msgId_;
      buffGuid_ = other.buffGuid_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuffRemove_SC Clone() {
      return new BuffRemove_SC(this);
    }

    /// <summary>Field number for the "msg_id" field.</summary>
    public const int MsgIdFieldNumber = 82020;
    private int msgId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MsgId {
      get { return msgId_; }
      set {
        msgId_ = value;
      }
    }

    /// <summary>Field number for the "buff_guid" field.</summary>
    public const int BuffGuidFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_buffGuid_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> buffGuid_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> BuffGuid {
      get { return buffGuid_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BuffRemove_SC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BuffRemove_SC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MsgId != other.MsgId) return false;
      if(!buffGuid_.Equals(other.buffGuid_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MsgId != 0) hash ^= MsgId.GetHashCode();
      hash ^= buffGuid_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      buffGuid_.WriteTo(output, _repeated_buffGuid_codec);
      if (MsgId != 0) {
        output.WriteRawTag(160, 134, 40);
        output.WriteInt32(MsgId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MsgId != 0) {
        size += 3 + pb::CodedOutputStream.ComputeInt32Size(MsgId);
      }
      size += buffGuid_.CalculateSize(_repeated_buffGuid_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BuffRemove_SC other) {
      if (other == null) {
        return;
      }
      if (other.MsgId != 0) {
        MsgId = other.MsgId;
      }
      buffGuid_.Add(other.buffGuid_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            buffGuid_.AddEntriesFrom(input, _repeated_buffGuid_codec);
            break;
          }
          case 656160: {
            MsgId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class BuffAdd_SC : pb::IMessage<BuffAdd_SC> {
    private static readonly pb::MessageParser<BuffAdd_SC> _parser = new pb::MessageParser<BuffAdd_SC>(() => new BuffAdd_SC());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BuffAdd_SC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.Proto.EmulatorReflection.Descriptor.MessageTypes[54]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuffAdd_SC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuffAdd_SC(BuffAdd_SC other) : this() {
      msgId_ = other.msgId_;
      buff_ = other.buff_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuffAdd_SC Clone() {
      return new BuffAdd_SC(this);
    }

    /// <summary>Field number for the "msg_id" field.</summary>
    public const int MsgIdFieldNumber = 82021;
    private int msgId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MsgId {
      get { return msgId_; }
      set {
        msgId_ = value;
      }
    }

    /// <summary>Field number for the "buff" field.</summary>
    public const int BuffFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Net.Proto.Buff> _repeated_buff_codec
        = pb::FieldCodec.ForMessage(10, global::Net.Proto.Buff.Parser);
    private readonly pbc::RepeatedField<global::Net.Proto.Buff> buff_ = new pbc::RepeatedField<global::Net.Proto.Buff>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Net.Proto.Buff> Buff {
      get { return buff_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BuffAdd_SC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BuffAdd_SC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MsgId != other.MsgId) return false;
      if(!buff_.Equals(other.buff_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MsgId != 0) hash ^= MsgId.GetHashCode();
      hash ^= buff_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      buff_.WriteTo(output, _repeated_buff_codec);
      if (MsgId != 0) {
        output.WriteRawTag(168, 134, 40);
        output.WriteInt32(MsgId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MsgId != 0) {
        size += 3 + pb::CodedOutputStream.ComputeInt32Size(MsgId);
      }
      size += buff_.CalculateSize(_repeated_buff_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BuffAdd_SC other) {
      if (other == null) {
        return;
      }
      if (other.MsgId != 0) {
        MsgId = other.MsgId;
      }
      buff_.Add(other.buff_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            buff_.AddEntriesFrom(input, _repeated_buff_codec);
            break;
          }
          case 656168: {
            MsgId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Skill_SC : pb::IMessage<Skill_SC> {
    private static readonly pb::MessageParser<Skill_SC> _parser = new pb::MessageParser<Skill_SC>(() => new Skill_SC());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Skill_SC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.Proto.EmulatorReflection.Descriptor.MessageTypes[55]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Skill_SC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Skill_SC(Skill_SC other) : this() {
      msgId_ = other.msgId_;
      skill_ = other.skill_ != null ? other.skill_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Skill_SC Clone() {
      return new Skill_SC(this);
    }

    /// <summary>Field number for the "msg_id" field.</summary>
    public const int MsgIdFieldNumber = 82022;
    private int msgId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MsgId {
      get { return msgId_; }
      set {
        msgId_ = value;
      }
    }

    /// <summary>Field number for the "skill" field.</summary>
    public const int SkillFieldNumber = 1;
    private global::Net.Proto.Skill skill_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Net.Proto.Skill Skill {
      get { return skill_; }
      set {
        skill_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Skill_SC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Skill_SC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MsgId != other.MsgId) return false;
      if (!object.Equals(Skill, other.Skill)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MsgId != 0) hash ^= MsgId.GetHashCode();
      if (skill_ != null) hash ^= Skill.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (skill_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Skill);
      }
      if (MsgId != 0) {
        output.WriteRawTag(176, 134, 40);
        output.WriteInt32(MsgId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MsgId != 0) {
        size += 3 + pb::CodedOutputStream.ComputeInt32Size(MsgId);
      }
      if (skill_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Skill);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Skill_SC other) {
      if (other == null) {
        return;
      }
      if (other.MsgId != 0) {
        MsgId = other.MsgId;
      }
      if (other.skill_ != null) {
        if (skill_ == null) {
          Skill = new global::Net.Proto.Skill();
        }
        Skill.MergeFrom(other.Skill);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (skill_ == null) {
              Skill = new global::Net.Proto.Skill();
            }
            input.ReadMessage(Skill);
            break;
          }
          case 656176: {
            MsgId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class FightBack_SC : pb::IMessage<FightBack_SC> {
    private static readonly pb::MessageParser<FightBack_SC> _parser = new pb::MessageParser<FightBack_SC>(() => new FightBack_SC());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FightBack_SC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.Proto.EmulatorReflection.Descriptor.MessageTypes[56]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FightBack_SC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FightBack_SC(FightBack_SC other) : this() {
      msgId_ = other.msgId_;
      attackGuid_ = other.attackGuid_;
      targetGuid_ = other.targetGuid_;
      damage_ = other.damage_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FightBack_SC Clone() {
      return new FightBack_SC(this);
    }

    /// <summary>Field number for the "msg_id" field.</summary>
    public const int MsgIdFieldNumber = 82023;
    private int msgId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MsgId {
      get { return msgId_; }
      set {
        msgId_ = value;
      }
    }

    /// <summary>Field number for the "attack_guid" field.</summary>
    public const int AttackGuidFieldNumber = 1;
    private string attackGuid_ = "";
    /// <summary>
    ///反击船只
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AttackGuid {
      get { return attackGuid_; }
      set {
        attackGuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "target_guid" field.</summary>
    public const int TargetGuidFieldNumber = 2;
    private string targetGuid_ = "";
    /// <summary>
    ///受到反击伤害船只
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TargetGuid {
      get { return targetGuid_; }
      set {
        targetGuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "damage" field.</summary>
    public const int DamageFieldNumber = 3;
    private int damage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Damage {
      get { return damage_; }
      set {
        damage_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FightBack_SC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FightBack_SC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MsgId != other.MsgId) return false;
      if (AttackGuid != other.AttackGuid) return false;
      if (TargetGuid != other.TargetGuid) return false;
      if (Damage != other.Damage) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MsgId != 0) hash ^= MsgId.GetHashCode();
      if (AttackGuid.Length != 0) hash ^= AttackGuid.GetHashCode();
      if (TargetGuid.Length != 0) hash ^= TargetGuid.GetHashCode();
      if (Damage != 0) hash ^= Damage.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AttackGuid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AttackGuid);
      }
      if (TargetGuid.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(TargetGuid);
      }
      if (Damage != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Damage);
      }
      if (MsgId != 0) {
        output.WriteRawTag(184, 134, 40);
        output.WriteInt32(MsgId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MsgId != 0) {
        size += 3 + pb::CodedOutputStream.ComputeInt32Size(MsgId);
      }
      if (AttackGuid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AttackGuid);
      }
      if (TargetGuid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TargetGuid);
      }
      if (Damage != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Damage);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FightBack_SC other) {
      if (other == null) {
        return;
      }
      if (other.MsgId != 0) {
        MsgId = other.MsgId;
      }
      if (other.AttackGuid.Length != 0) {
        AttackGuid = other.AttackGuid;
      }
      if (other.TargetGuid.Length != 0) {
        TargetGuid = other.TargetGuid;
      }
      if (other.Damage != 0) {
        Damage = other.Damage;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AttackGuid = input.ReadString();
            break;
          }
          case 18: {
            TargetGuid = input.ReadString();
            break;
          }
          case 24: {
            Damage = input.ReadInt32();
            break;
          }
          case 656184: {
            MsgId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ShipState_SC : pb::IMessage<ShipState_SC> {
    private static readonly pb::MessageParser<ShipState_SC> _parser = new pb::MessageParser<ShipState_SC>(() => new ShipState_SC());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ShipState_SC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Net.Proto.EmulatorReflection.Descriptor.MessageTypes[57]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShipState_SC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShipState_SC(ShipState_SC other) : this() {
      msgId_ = other.msgId_;
      shipGuid_ = other.shipGuid_;
      state_ = other.state_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShipState_SC Clone() {
      return new ShipState_SC(this);
    }

    /// <summary>Field number for the "msg_id" field.</summary>
    public const int MsgIdFieldNumber = 82024;
    private int msgId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MsgId {
      get { return msgId_; }
      set {
        msgId_ = value;
      }
    }

    /// <summary>Field number for the "ship_guid" field.</summary>
    public const int ShipGuidFieldNumber = 1;
    private string shipGuid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ShipGuid {
      get { return shipGuid_; }
      set {
        shipGuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 2;
    private global::Net.Proto.ShipState_SC.Types.State state_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Net.Proto.ShipState_SC.Types.State State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ShipState_SC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ShipState_SC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MsgId != other.MsgId) return false;
      if (ShipGuid != other.ShipGuid) return false;
      if (State != other.State) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MsgId != 0) hash ^= MsgId.GetHashCode();
      if (ShipGuid.Length != 0) hash ^= ShipGuid.GetHashCode();
      if (State != 0) hash ^= State.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ShipGuid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ShipGuid);
      }
      if (State != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) State);
      }
      if (MsgId != 0) {
        output.WriteRawTag(192, 134, 40);
        output.WriteInt32(MsgId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MsgId != 0) {
        size += 3 + pb::CodedOutputStream.ComputeInt32Size(MsgId);
      }
      if (ShipGuid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ShipGuid);
      }
      if (State != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) State);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ShipState_SC other) {
      if (other == null) {
        return;
      }
      if (other.MsgId != 0) {
        MsgId = other.MsgId;
      }
      if (other.ShipGuid.Length != 0) {
        ShipGuid = other.ShipGuid;
      }
      if (other.State != 0) {
        State = other.State;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ShipGuid = input.ReadString();
            break;
          }
          case 16: {
            State = (global::Net.Proto.ShipState_SC.Types.State) input.ReadEnum();
            break;
          }
          case 656192: {
            MsgId = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the ShipState_SC message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum State {
        [pbr::OriginalName("OK")] Ok = 0,
        /// <summary>
        ///不能移动,可以普攻,可以技能,定身状态
        /// </summary>
        [pbr::OriginalName("NO_MOVE")] NoMove = 1,
        /// <summary>
        ///可以移动,不能普攻,可以技能攻击,缴械状态
        /// </summary>
        [pbr::OriginalName("NO_NORMAL_ATTACK")] NoNormalAttack = 2,
        /// <summary>
        ///不能技能攻击,沉默状态
        /// </summary>
        [pbr::OriginalName("NO_SKILL_ATTACK")] NoSkillAttack = 3,
        /// <summary>
        ///可以移动,不能普攻和技能
        /// </summary>
        [pbr::OriginalName("NO_ATTACK")] NoAttack = 4,
        /// <summary>
        ///不能移动,不能普通攻击和技能攻击,眩晕状态
        /// </summary>
        [pbr::OriginalName("NO_ALL")] NoAll = 5,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
